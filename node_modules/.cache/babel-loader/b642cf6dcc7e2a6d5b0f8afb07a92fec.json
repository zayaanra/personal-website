{"ast":null,"code":"import { BaseAnimationBuilder } from '../animationBuilder';\nimport { withSequence, withTiming } from '../../animation';\nimport { FadeIn, FadeOut } from '../defaultAnimations/Fade';\nexport class EntryExitTransition extends BaseAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    this.enteringV = FadeIn;\n    this.exitingV = FadeOut;\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const callback = this.callbackV;\n      const delay = this.getDelay();\n      const enteringAnimation = this.enteringV.build();\n      const exitingAnimation = this.exitingV.build();\n      const exitingDuration = this.exitingV.getDuration();\n      return values => {\n        'worklet';\n\n        var _a, _b, _c, _d;\n\n        const enteringValues = enteringAnimation(values);\n        const exitingValues = exitingAnimation(values);\n        const animations = {\n          transform: []\n        };\n\n        for (const prop of Object.keys(exitingValues.animations)) {\n          if (prop === 'transform') {\n            (_a = exitingValues.animations[prop]) === null || _a === void 0 ? void 0 : _a.forEach((value, index) => {\n              var _a;\n\n              for (const transformProp of Object.keys(value)) {\n                (_a = animations.transform) === null || _a === void 0 ? void 0 : _a.push({\n                  [transformProp]: delayFunction(delay, withSequence(value[transformProp], withTiming(exitingValues.initialValues.transform ? exitingValues.initialValues.transform[index][transformProp] : 0, {\n                    duration: 0\n                  })))\n                });\n              }\n            });\n          } else {\n            const sequence = enteringValues.animations[prop] !== undefined ? [exitingValues.animations[prop], withTiming(enteringValues.initialValues[prop], {\n              duration: 0\n            }), enteringValues.animations[prop]] : [exitingValues.animations[prop], withTiming(Object.keys(values).includes(prop) ? values[prop] : exitingValues.initialValues[prop], {\n              duration: 0\n            })];\n            animations[prop] = delayFunction(delay, withSequence(...sequence));\n          }\n        }\n\n        for (const prop of Object.keys(enteringValues.animations)) {\n          if (prop === 'transform') {\n            (_b = enteringValues.animations[prop]) === null || _b === void 0 ? void 0 : _b.forEach((value, index) => {\n              var _a;\n\n              for (const transformProp of Object.keys(value)) {\n                (_a = animations.transform) === null || _a === void 0 ? void 0 : _a.push({\n                  [transformProp]: delayFunction(delay + exitingDuration, withSequence(withTiming(enteringValues.initialValues.transform ? enteringValues.initialValues.transform[index][transformProp] : 0, {\n                    duration: exitingDuration\n                  }), value[transformProp]))\n                });\n              }\n            });\n          } else if (animations[prop] !== undefined) {\n            // it was already added in the previous loop\n            continue;\n          } else {\n            animations[prop] = delayFunction(delay, withSequence(withTiming(enteringValues.initialValues[prop], {\n              duration: 0\n            }), enteringValues.animations[prop]));\n          }\n        }\n\n        const mergedTransform = ((_c = exitingValues.initialValues.transform) !== null && _c !== void 0 ? _c : []).concat(((_d = enteringValues.animations.transform) !== null && _d !== void 0 ? _d : []).map(value => {\n          for (const transformProp of Object.keys(value)) {\n            const current = value[transformProp].current;\n\n            if (typeof current === 'string') {\n              if (current.includes('deg')) return {\n                [transformProp]: '0deg'\n              };else return {\n                [transformProp]: '0'\n              };\n            } else if (transformProp.includes('translate')) {\n              return {\n                [transformProp]: 0\n              };\n            } else {\n              return {\n                [transformProp]: 1\n              };\n            }\n          }\n\n          return value;\n        }));\n        return {\n          initialValues: Object.assign(Object.assign({}, exitingValues.initialValues), {\n            originX: values.currentOriginX,\n            originY: values.currentOriginY,\n            width: values.currentWidth,\n            height: values.currentHeight,\n            transform: mergedTransform\n          }),\n          animations: Object.assign({\n            originX: delayFunction(delay + exitingDuration, withTiming(values.targetOriginX, {\n              duration: exitingDuration\n            })),\n            originY: delayFunction(delay + exitingDuration, withTiming(values.targetOriginY, {\n              duration: exitingDuration\n            })),\n            width: delayFunction(delay + exitingDuration, withTiming(values.targetWidth, {\n              duration: exitingDuration\n            })),\n            height: delayFunction(delay + exitingDuration, withTiming(values.targetHeight, {\n              duration: exitingDuration\n            }))\n          }, animations),\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new EntryExitTransition();\n  }\n\n  static entering(animation) {\n    const instance = this.createInstance();\n    return instance.entering(animation);\n  }\n\n  entering(animation) {\n    this.enteringV = animation;\n    return this;\n  }\n\n  static exiting(animation) {\n    const instance = this.createInstance();\n    return instance.exiting(animation);\n  }\n\n  exiting(animation) {\n    this.exitingV = animation;\n    return this;\n  }\n\n}\nexport function combineTransition(exiting, entering) {\n  return EntryExitTransition.entering(entering).exiting(exiting);\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultTransitions/EntryExitTransition.js"],"names":["BaseAnimationBuilder","withSequence","withTiming","FadeIn","FadeOut","EntryExitTransition","constructor","arguments","enteringV","exitingV","build","delayFunction","getDelayFunction","callback","callbackV","delay","getDelay","enteringAnimation","exitingAnimation","exitingDuration","getDuration","values","_a","_b","_c","_d","enteringValues","exitingValues","animations","transform","prop","Object","keys","forEach","value","index","transformProp","push","initialValues","duration","sequence","undefined","includes","mergedTransform","concat","map","current","assign","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","targetOriginX","targetOriginY","targetWidth","targetHeight","createInstance","entering","animation","instance","exiting","combineTransition"],"mappings":"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","sourcesContent":["import { BaseAnimationBuilder } from '../animationBuilder';\nimport { withSequence, withTiming } from '../../animation';\nimport { FadeIn, FadeOut } from '../defaultAnimations/Fade';\nexport class EntryExitTransition extends BaseAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.enteringV = FadeIn;\n        this.exitingV = FadeOut;\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const callback = this.callbackV;\n            const delay = this.getDelay();\n            const enteringAnimation = this.enteringV.build();\n            const exitingAnimation = this.exitingV.build();\n            const exitingDuration = this.exitingV.getDuration();\n            return (values) => {\n                'worklet';\n                var _a, _b, _c, _d;\n                const enteringValues = enteringAnimation(values);\n                const exitingValues = exitingAnimation(values);\n                const animations = {\n                    transform: [],\n                };\n                for (const prop of Object.keys(exitingValues.animations)) {\n                    if (prop === 'transform') {\n                        (_a = exitingValues.animations[prop]) === null || _a === void 0 ? void 0 : _a.forEach((value, index) => {\n                            var _a;\n                            for (const transformProp of Object.keys(value)) {\n                                (_a = animations.transform) === null || _a === void 0 ? void 0 : _a.push({\n                                    [transformProp]: delayFunction(delay, withSequence(value[transformProp], withTiming(exitingValues.initialValues.transform\n                                        ? exitingValues.initialValues.transform[index][transformProp]\n                                        : 0, { duration: 0 }))),\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        const sequence = enteringValues.animations[prop] !== undefined\n                            ? [\n                                exitingValues.animations[prop],\n                                withTiming(enteringValues.initialValues[prop], {\n                                    duration: 0,\n                                }),\n                                enteringValues.animations[prop],\n                            ]\n                            : [\n                                exitingValues.animations[prop],\n                                withTiming(Object.keys(values).includes(prop)\n                                    ? values[prop]\n                                    : exitingValues.initialValues[prop], { duration: 0 }),\n                            ];\n                        animations[prop] = delayFunction(delay, withSequence(...sequence));\n                    }\n                }\n                for (const prop of Object.keys(enteringValues.animations)) {\n                    if (prop === 'transform') {\n                        (_b = enteringValues.animations[prop]) === null || _b === void 0 ? void 0 : _b.forEach((value, index) => {\n                            var _a;\n                            for (const transformProp of Object.keys(value)) {\n                                (_a = animations.transform) === null || _a === void 0 ? void 0 : _a.push({\n                                    [transformProp]: delayFunction(delay + exitingDuration, withSequence(withTiming(enteringValues.initialValues.transform\n                                        ? enteringValues.initialValues.transform[index][transformProp]\n                                        : 0, { duration: exitingDuration }), value[transformProp])),\n                                });\n                            }\n                        });\n                    }\n                    else if (animations[prop] !== undefined) {\n                        // it was already added in the previous loop\n                        continue;\n                    }\n                    else {\n                        animations[prop] = delayFunction(delay, withSequence(withTiming(enteringValues.initialValues[prop], { duration: 0 }), enteringValues.animations[prop]));\n                    }\n                }\n                const mergedTransform = ((_c = exitingValues.initialValues.transform) !== null && _c !== void 0 ? _c : []).concat(((_d = enteringValues.animations.transform) !== null && _d !== void 0 ? _d : []).map((value) => {\n                    for (const transformProp of Object.keys(value)) {\n                        const current = value[transformProp].current;\n                        if (typeof current === 'string') {\n                            if (current.includes('deg'))\n                                return {\n                                    [transformProp]: '0deg',\n                                };\n                            else\n                                return {\n                                    [transformProp]: '0',\n                                };\n                        }\n                        else if (transformProp.includes('translate')) {\n                            return { [transformProp]: 0 };\n                        }\n                        else {\n                            return { [transformProp]: 1 };\n                        }\n                    }\n                    return value;\n                }));\n                return {\n                    initialValues: Object.assign(Object.assign({}, exitingValues.initialValues), { originX: values.currentOriginX, originY: values.currentOriginY, width: values.currentWidth, height: values.currentHeight, transform: mergedTransform }),\n                    animations: Object.assign({ originX: delayFunction(delay + exitingDuration, withTiming(values.targetOriginX, { duration: exitingDuration })), originY: delayFunction(delay + exitingDuration, withTiming(values.targetOriginY, { duration: exitingDuration })), width: delayFunction(delay + exitingDuration, withTiming(values.targetWidth, { duration: exitingDuration })), height: delayFunction(delay + exitingDuration, withTiming(values.targetHeight, { duration: exitingDuration })) }, animations),\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new EntryExitTransition();\n    }\n    static entering(animation) {\n        const instance = this.createInstance();\n        return instance.entering(animation);\n    }\n    entering(animation) {\n        this.enteringV = animation;\n        return this;\n    }\n    static exiting(animation) {\n        const instance = this.createInstance();\n        return instance.exiting(animation);\n    }\n    exiting(animation) {\n        this.exitingV = animation;\n        return this;\n    }\n}\nexport function combineTransition(exiting, entering) {\n    return EntryExitTransition.entering(entering).exiting(exiting);\n}\n"]},"metadata":{},"sourceType":"module"}