{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nexport function useDerivedValue(processor, dependencies) {\n  var _a;\n\n  const initRef = useRef(null);\n  const inputs = Object.values((_a = processor._closure) !== null && _a !== void 0 ? _a : {}); // build dependencies\n\n  if (dependencies === undefined) {\n    dependencies = [...inputs, processor.__workletHash];\n  } else {\n    dependencies.push(processor.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(processor));\n  } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n  const sharedValue = initRef.current;\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n\n      sharedValue.value = processor();\n    };\n\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n  return sharedValue;\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/hook/useDerivedValue.js"],"names":["useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","useDerivedValue","processor","dependencies","_a","initRef","inputs","Object","values","_closure","undefined","__workletHash","push","current","sharedValue","fun","value","mapperId"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,QAAqD,SAArD;AACA,OAAO,SAASC,eAAT,CAAyBC,SAAzB,EAAoCC,YAApC,EAAkD;AACrD,MAAIC,EAAJ;;AACA,QAAMC,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMU,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,CAACJ,EAAE,GAAGF,SAAS,CAACO,QAAhB,MAA8B,IAA9B,IAAsCL,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2D,EAAzE,CAAf,CAHqD,CAIrD;;AACA,MAAID,YAAY,KAAKO,SAArB,EAAgC;AAC5BP,IAAAA,YAAY,GAAG,CAAC,GAAGG,MAAJ,EAAYJ,SAAS,CAACS,aAAtB,CAAf;AACH,GAFD,MAGK;AACDR,IAAAA,YAAY,CAACS,IAAb,CAAkBV,SAAS,CAACS,aAA5B;AACH;;AACD,MAAIN,OAAO,CAACQ,OAAR,KAAoB,IAAxB,EAA8B;AAC1BR,IAAAA,OAAO,CAACQ,OAAR,GAAkBf,WAAW,CAACD,iBAAiB,CAACK,SAAD,CAAlB,CAA7B;AACH,GAboD,CAcrD;;;AACA,QAAMY,WAAW,GAAGT,OAAO,CAACQ,OAA5B;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,GAAG,GAAG,MAAM;AACd;;AACAD,MAAAA,WAAW,CAACE,KAAZ,GAAoBd,SAAS,EAA7B;AACH,KAHD;;AAIA,UAAMe,QAAQ,GAAGlB,WAAW,CAACgB,GAAD,EAAMT,MAAN,EAAc,CAACQ,WAAD,CAAd,CAA5B;AACA,WAAO,MAAM;AACTd,MAAAA,UAAU,CAACiB,QAAD,CAAV;AACH,KAFD;AAGH,GATQ,EASNd,YATM,CAAT;AAUAR,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACTU,MAAAA,OAAO,CAACQ,OAAR,GAAkB,IAAlB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAOC,WAAP;AACH","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nexport function useDerivedValue(processor, dependencies) {\n    var _a;\n    const initRef = useRef(null);\n    const inputs = Object.values((_a = processor._closure) !== null && _a !== void 0 ? _a : {});\n    // build dependencies\n    if (dependencies === undefined) {\n        dependencies = [...inputs, processor.__workletHash];\n    }\n    else {\n        dependencies.push(processor.__workletHash);\n    }\n    if (initRef.current === null) {\n        initRef.current = makeMutable(initialUpdaterRun(processor));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const sharedValue = initRef.current;\n    useEffect(() => {\n        const fun = () => {\n            'worklet';\n            sharedValue.value = processor();\n        };\n        const mapperId = startMapper(fun, inputs, [sharedValue]);\n        return () => {\n            stopMapper(mapperId);\n        };\n    }, dependencies);\n    useEffect(() => {\n        return () => {\n            initRef.current = null;\n        };\n    }, []);\n    return sharedValue;\n}\n"]},"metadata":{},"sourceType":"module"}