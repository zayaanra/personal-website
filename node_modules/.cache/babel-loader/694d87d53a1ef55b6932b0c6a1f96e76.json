{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahma\\\\Desktop\\\\Projects\\\\Python\\\\website\\\\personal-website\\\\frontend\\\\app\\\\src\\\\components\\\\svg\\\\Square.js\";\nimport { StyleSheet, View, Image, Text, Animated, Dimensions } from \"react-native\";\nimport React, { useRef } from 'react';\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pathColor = \"black\";\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\nconst vb = `0 0 ${windowWidth} ${windowHeight}`; // const path = {\n//     transition: {\n//     duration: 4, //Change this to either slow or hasten the animation\n//     ease: \"easeInOut\",\n// },\n// variants: {\n//     visible: {\n//         pathLength: 1, //Change this to determine how much of the path is drawn when first rendered\n// },\n// hidden: {\n//     pathLength: 0,\n//     },\n// },\n// };\n\nconst styles = StyleSheet.create({\n  box: {\n    width: 150,\n    height: 150,\n    backgroundColor: \"purple\",\n    borderRadius: 30\n  },\n  circle: {\n    width: 100,\n    height: 100,\n    borderRadius: 100 / 2,\n    backgroundColor: \"red\"\n  }\n}); // const draw = {\n//     hidden: { pathLength: 0, opacity: 0 },\n//     visible: (i) => {\n//       const delay = 1 + i * 0.5;\n//       return {\n//         pathLength: 1,\n//         opacity: 1,\n//         transition: {\n//           pathLength: { delay, type: \"spring\", duration: 1.5, bounce: 0 },\n//           opacity: { delay, duration: 0.01 }\n//         }\n//       };\n//     }\n//   };\n\n/* Generate components */\n\nfunction generateComps() {\n  let components = [];\n\n  for (let i = 1; i <= 20; i++) {\n    components.push( /*#__PURE__*/_jsxDEV(View, {\n      style: {\n        width: 150,\n        height: 150,\n        backgroundColor: \"purple\",\n        borderRadius: 30\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this));\n  }\n\n  return components;\n} //letters are 2 boxes wide, 3 boxes tall\n\n\nfunction Square() {\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    animate: {\n      scale: [1, 2, 2, 1, 1],\n      rotate: [0, 0, 270, 270, 0],\n      borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"]\n    },\n    transition: {\n      duration: 2,\n      ease: \"easeInOut\",\n      times: [0, 0.2, 0.5, 0.8, 1],\n      repeat: Infinity,\n      repeatDelay: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(View, {\n      children: generateComps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this) // <motion.svg width=\"500\" height=\"600\" viewBox=\"0 0 600 600\" initial=\"hidden\" animate=\"visible\">\n  //     <motion.circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"red\" variants={draw} custom={1}></motion.circle>\n  // </motion.svg>\n  ;\n}\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/src/components/svg/Square.js"],"names":["StyleSheet","View","Image","Text","Animated","Dimensions","React","useRef","motion","useMotionValue","pathColor","windowWidth","get","width","windowHeight","height","vb","styles","create","box","backgroundColor","borderRadius","circle","generateComps","components","i","push","Square","scale","rotate","duration","ease","times","repeat","Infinity","repeatDelay"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkDC,UAAlD,QAAoE,cAApE;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,eAAvC;;AAEA,MAAMC,SAAS,GAAG,OAAlB;AAEA,MAAMC,WAAW,GAAGN,UAAU,CAACO,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AACA,MAAMC,YAAY,GAAGT,UAAU,CAACO,GAAX,CAAe,QAAf,EAAyBG,MAA9C;AAEA,MAAMC,EAAE,GAAI,OAAML,WAAY,IAAGG,YAAa,EAA9C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,MAAM,GAAGjB,UAAU,CAACkB,MAAX,CAAkB;AAC7BC,EAAAA,GAAG,EAAE;AACDN,IAAAA,KAAK,EAAE,GADN;AAEDE,IAAAA,MAAM,EAAE,GAFP;AAGDK,IAAAA,eAAe,EAAE,QAHhB;AAIDC,IAAAA,YAAY,EAAE;AAJb,GADwB;AAO7BC,EAAAA,MAAM,EAAE;AACJT,IAAAA,KAAK,EAAE,GADH;AAEJE,IAAAA,MAAM,EAAE,GAFJ;AAGJM,IAAAA,YAAY,EAAE,MAAM,CAHhB;AAIJD,IAAAA,eAAe,EAAE;AAJb;AAPqB,CAAlB,CAAf,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA,SAASG,aAAT,GAAyB;AACrB,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,IAAAA,UAAU,CAACE,IAAX,eAAgB,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACb,QAAAA,KAAK,EAAE,GAAR;AAAaE,QAAAA,MAAM,EAAE,GAArB;AAA0BK,QAAAA,eAAe,EAAE,QAA3C;AAAqDC,QAAAA,YAAY,EAAE;AAAnE;AAAb;AAAA;AAAA;AAAA;AAAA,YAAhB;AACH;;AACD,SAAOG,UAAP;AACH,C,CAED;;;AACA,SAASG,MAAT,GAAkB;AACd,sBACI,QAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAR;AAAyBC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAjB,CAAjC;AAAsDR,MAAAA,YAAY,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B;AAApE,KAArB;AACI,IAAA,UAAU,EAAE;AACZS,MAAAA,QAAQ,EAAE,CADE;AAEZC,MAAAA,IAAI,EAAE,WAFM;AAGZC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,EAAmB,CAAnB,CAHK;AAIZC,MAAAA,MAAM,EAAEC,QAJI;AAKZC,MAAAA,WAAW,EAAE;AALD,KADhB;AAAA,2BASI,QAAC,IAAD;AAAA,gBAAOZ,aAAa;AAApB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAYA;AACA;AACA;AAdA;AAgBH;;KAjBQI,M;AAmBT,eAAeA,MAAf","sourcesContent":["import { StyleSheet, View, Image, Text, Animated, Dimensions } from \"react-native\";\r\nimport React, { useRef } from 'react';\r\n\r\nimport { motion, useMotionValue } from \"framer-motion\";\r\n\r\nconst pathColor = \"black\";\r\n\r\nconst windowWidth = Dimensions.get(\"window\").width;\r\nconst windowHeight = Dimensions.get(\"window\").height;\r\n\r\nconst vb = `0 0 ${windowWidth} ${windowHeight}`\r\n\r\n// const path = {\r\n//     transition: {\r\n//     duration: 4, //Change this to either slow or hasten the animation\r\n//     ease: \"easeInOut\",\r\n// },\r\n// variants: {\r\n//     visible: {\r\n//         pathLength: 1, //Change this to determine how much of the path is drawn when first rendered\r\n// },\r\n// hidden: {\r\n//     pathLength: 0,\r\n//     },\r\n// },\r\n// };\r\n\r\nconst styles = StyleSheet.create({\r\n    box: {\r\n        width: 150,\r\n        height: 150,\r\n        backgroundColor: \"purple\",\r\n        borderRadius: 30\r\n    },\r\n    circle: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 100 / 2,\r\n        backgroundColor: \"red\",\r\n    }\r\n    \r\n})\r\n// const draw = {\r\n//     hidden: { pathLength: 0, opacity: 0 },\r\n//     visible: (i) => {\r\n//       const delay = 1 + i * 0.5;\r\n//       return {\r\n//         pathLength: 1,\r\n//         opacity: 1,\r\n//         transition: {\r\n//           pathLength: { delay, type: \"spring\", duration: 1.5, bounce: 0 },\r\n//           opacity: { delay, duration: 0.01 }\r\n//         }\r\n//       };\r\n//     }\r\n//   };\r\n\r\n/* Generate components */\r\nfunction generateComps() {\r\n    let components = []\r\n    for (let i = 1; i <= 20; i++) {\r\n        components.push(<View style={{width: 150, height: 150, backgroundColor: \"purple\", borderRadius: 30}}></View>)\r\n    }\r\n    return components\r\n}\r\n\r\n//letters are 2 boxes wide, 3 boxes tall\r\nfunction Square() {\r\n    return(\r\n        <motion.div animate={{scale: [1, 2, 2, 1, 1], rotate: [0, 0, 270, 270, 0], borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"]}}   \r\n            transition={{\r\n            duration: 2,\r\n            ease: \"easeInOut\",\r\n            times: [0, 0.2, 0.5, 0.8, 1],\r\n            repeat: Infinity,\r\n            repeatDelay: 1\r\n        }}>\r\n            {/* TODO - how to render a list of components */}\r\n            <View>{generateComps()}</View>\r\n        </motion.div>\r\n    // <motion.svg width=\"500\" height=\"600\" viewBox=\"0 0 600 600\" initial=\"hidden\" animate=\"visible\">\r\n    //     <motion.circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"red\" variants={draw} custom={1}></motion.circle>\r\n    // </motion.svg>\r\n    )\r\n}\r\n\r\nexport default Square;\r\n\r\n"]},"metadata":{},"sourceType":"module"}