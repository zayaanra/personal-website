{"ast":null,"code":"import MapperRegistry from './MapperRegistry';\nimport MutableValue from './MutableValue';\nimport Mapper from './Mapper';\nimport { NativeReanimated } from '../NativeReanimated/NativeReanimated';\nexport default class JSReanimated extends NativeReanimated {\n  constructor() {\n    super(false);\n    this._valueSetter = undefined;\n    this._renderRequested = false;\n    this._mapperRegistry = new MapperRegistry(this);\n    this._frames = [];\n\n    if (process.env.JEST_WORKER_ID) {\n      this.timeProvider = {\n        now: () => Date.now()\n      };\n    } else {\n      this.timeProvider = {\n        now: () => window.performance.now()\n      };\n    }\n  }\n\n  pushFrame(frame) {\n    this._frames.push(frame);\n\n    this.maybeRequestRender();\n  }\n\n  getTimestamp() {\n    return this.timeProvider.now();\n  }\n\n  maybeRequestRender() {\n    if (!this._renderRequested) {\n      this._renderRequested = true;\n      requestAnimationFrame(_timestampMs => {\n        this._renderRequested = false;\n\n        this._onRender(this.getTimestamp());\n      });\n    }\n  }\n\n  _onRender(timestampMs) {\n    this._mapperRegistry.execute();\n\n    const frames = [...this._frames];\n    this._frames = [];\n\n    for (let i = 0, len = frames.length; i < len; ++i) {\n      frames[i](timestampMs);\n    }\n\n    if (this._mapperRegistry.needRunOnRender) {\n      this._mapperRegistry.execute();\n    }\n  }\n\n  installCoreFunctions(valueSetter) {\n    this._valueSetter = valueSetter;\n  }\n\n  makeShareable(value) {\n    return value;\n  }\n\n  makeMutable(value) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return new MutableValue(value, this._valueSetter);\n  }\n\n  makeRemote() {\n    let object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return object;\n  }\n\n  startMapper(mapper) {\n    let inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    const instance = new Mapper(this, mapper, inputs, outputs);\n\n    const mapperId = this._mapperRegistry.startMapper(instance);\n\n    this.maybeRequestRender();\n    return mapperId;\n  }\n\n  stopMapper(mapperId) {\n    this._mapperRegistry.stopMapper(mapperId);\n  }\n\n  registerEventHandler(_, __) {\n    // noop\n    return '';\n  }\n\n  unregisterEventHandler(_) {// noop\n  }\n\n  enableLayoutAnimations() {\n    console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/js-reanimated/JSReanimated.js"],"names":["MapperRegistry","MutableValue","Mapper","NativeReanimated","JSReanimated","constructor","_valueSetter","undefined","_renderRequested","_mapperRegistry","_frames","process","env","JEST_WORKER_ID","timeProvider","now","Date","window","performance","pushFrame","frame","push","maybeRequestRender","getTimestamp","requestAnimationFrame","_timestampMs","_onRender","timestampMs","execute","frames","i","len","length","needRunOnRender","installCoreFunctions","valueSetter","makeShareable","value","makeMutable","makeRemote","object","startMapper","mapper","inputs","outputs","instance","mapperId","stopMapper","registerEventHandler","_","__","unregisterEventHandler","enableLayoutAnimations","console","warn"],"mappings":"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","sourcesContent":["import MapperRegistry from './MapperRegistry';\nimport MutableValue from './MutableValue';\nimport Mapper from './Mapper';\nimport { NativeReanimated } from '../NativeReanimated/NativeReanimated';\nexport default class JSReanimated extends NativeReanimated {\n    constructor() {\n        super(false);\n        this._valueSetter = undefined;\n        this._renderRequested = false;\n        this._mapperRegistry = new MapperRegistry(this);\n        this._frames = [];\n        if (process.env.JEST_WORKER_ID) {\n            this.timeProvider = { now: () => Date.now() };\n        }\n        else {\n            this.timeProvider = { now: () => window.performance.now() };\n        }\n    }\n    pushFrame(frame) {\n        this._frames.push(frame);\n        this.maybeRequestRender();\n    }\n    getTimestamp() {\n        return this.timeProvider.now();\n    }\n    maybeRequestRender() {\n        if (!this._renderRequested) {\n            this._renderRequested = true;\n            requestAnimationFrame((_timestampMs) => {\n                this._renderRequested = false;\n                this._onRender(this.getTimestamp());\n            });\n        }\n    }\n    _onRender(timestampMs) {\n        this._mapperRegistry.execute();\n        const frames = [...this._frames];\n        this._frames = [];\n        for (let i = 0, len = frames.length; i < len; ++i) {\n            frames[i](timestampMs);\n        }\n        if (this._mapperRegistry.needRunOnRender) {\n            this._mapperRegistry.execute();\n        }\n    }\n    installCoreFunctions(valueSetter) {\n        this._valueSetter = valueSetter;\n    }\n    makeShareable(value) {\n        return value;\n    }\n    makeMutable(value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return new MutableValue(value, this._valueSetter);\n    }\n    makeRemote(object = {}) {\n        return object;\n    }\n    startMapper(mapper, inputs = [], outputs = []) {\n        const instance = new Mapper(this, mapper, inputs, outputs);\n        const mapperId = this._mapperRegistry.startMapper(instance);\n        this.maybeRequestRender();\n        return mapperId;\n    }\n    stopMapper(mapperId) {\n        this._mapperRegistry.stopMapper(mapperId);\n    }\n    registerEventHandler(_, __) {\n        // noop\n        return '';\n    }\n    unregisterEventHandler(_) {\n        // noop\n    }\n    enableLayoutAnimations() {\n        console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}