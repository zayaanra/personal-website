{"ast":null,"code":"import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class FlipInXUp extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateX: '90deg'\n            }, {\n              translateY: -targetValues.targetHeight\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateX: delayFunction(delay, animation('0deg', config))\n            }, {\n              translateY: delayFunction(delay, animation(0, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipInXUp();\n  }\n\n}\nexport class FlipInYLeft extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateY: '-90deg'\n            }, {\n              translateX: -targetValues.targetWidth\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateY: delayFunction(delay, animation('0deg', config))\n            }, {\n              translateX: delayFunction(delay, animation(0, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipInYLeft();\n  }\n\n}\nexport class FlipInXDown extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateX: '-90deg'\n            }, {\n              translateY: targetValues.targetHeight\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateX: delayFunction(delay, animation('0deg', config))\n            }, {\n              translateY: delayFunction(delay, animation(0, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipInXDown();\n  }\n\n}\nexport class FlipInYRight extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateY: '90deg'\n            }, {\n              translateX: targetValues.targetWidth\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateY: delayFunction(delay, animation('0deg', config))\n            }, {\n              translateX: delayFunction(delay, animation(0, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipInYRight();\n  }\n\n}\nexport class FlipInEasyX extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return () => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateX: '90deg'\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateX: delayFunction(delay, animation('0deg', config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipInEasyX();\n  }\n\n}\nexport class FlipInEasyY extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return () => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateY: '90deg'\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateY: delayFunction(delay, animation('0deg', config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipInEasyY();\n  }\n\n}\nexport class FlipOutXUp extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateX: '0deg'\n            }, {\n              translateY: 0\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateX: delayFunction(delay, animation('90deg', config))\n            }, {\n              translateY: delayFunction(delay, animation(-targetValues.currentHeight, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipOutXUp();\n  }\n\n}\nexport class FlipOutYLeft extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateY: '0deg'\n            }, {\n              translateX: 0\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateY: delayFunction(delay, animation('-90deg', config))\n            }, {\n              translateX: delayFunction(delay, animation(-targetValues.currentWidth, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipOutYLeft();\n  }\n\n}\nexport class FlipOutXDown extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateX: '0deg'\n            }, {\n              translateY: 0\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateX: delayFunction(delay, animation('-90deg', config))\n            }, {\n              translateY: delayFunction(delay, animation(targetValues.currentHeight, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipOutXDown();\n  }\n\n}\nexport class FlipOutYRight extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return targetValues => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateY: '0deg'\n            }, {\n              translateX: 0\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateY: delayFunction(delay, animation('90deg', config))\n            }, {\n              translateX: delayFunction(delay, animation(targetValues.currentWidth, config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipOutYRight();\n  }\n\n}\nexport class FlipOutEasyX extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return () => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateX: '0deg'\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateX: delayFunction(delay, animation('90deg', config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipOutEasyX();\n  }\n\n}\nexport class FlipOutEasyY extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return () => {\n        'worklet';\n\n        return {\n          initialValues: {\n            transform: [{\n              perspective: 500\n            }, {\n              rotateY: '0deg'\n            }]\n          },\n          animations: {\n            transform: [{\n              perspective: delayFunction(delay, animation(500, config))\n            }, {\n              rotateY: delayFunction(delay, animation('90deg', config))\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new FlipOutEasyY();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultAnimations/Flip.js"],"names":["ComplexAnimationBuilder","FlipInXUp","constructor","arguments","build","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","delay","getDelay","callback","callbackV","targetValues","initialValues","transform","perspective","rotateX","translateY","targetHeight","animations","createInstance","FlipInYLeft","rotateY","translateX","targetWidth","FlipInXDown","FlipInYRight","FlipInEasyX","FlipInEasyY","FlipOutXUp","currentHeight","FlipOutYLeft","currentWidth","FlipOutXDown","FlipOutYRight","FlipOutEasyX","FlipOutEasyY"],"mappings":"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","sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class FlipInXUp extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateX: '90deg' },\n                            { translateY: -targetValues.targetHeight },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateX: delayFunction(delay, animation('0deg', config)) },\n                            { translateY: delayFunction(delay, animation(0, config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipInXUp();\n    }\n}\nexport class FlipInYLeft extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateY: '-90deg' },\n                            { translateX: -targetValues.targetWidth },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateY: delayFunction(delay, animation('0deg', config)) },\n                            { translateX: delayFunction(delay, animation(0, config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipInYLeft();\n    }\n}\nexport class FlipInXDown extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateX: '-90deg' },\n                            { translateY: targetValues.targetHeight },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateX: delayFunction(delay, animation('0deg', config)) },\n                            { translateY: delayFunction(delay, animation(0, config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipInXDown();\n    }\n}\nexport class FlipInYRight extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateY: '90deg' },\n                            { translateX: targetValues.targetWidth },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateY: delayFunction(delay, animation('0deg', config)) },\n                            { translateX: delayFunction(delay, animation(0, config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipInYRight();\n    }\n}\nexport class FlipInEasyX extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return () => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [{ perspective: 500 }, { rotateX: '90deg' }],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateX: delayFunction(delay, animation('0deg', config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipInEasyX();\n    }\n}\nexport class FlipInEasyY extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return () => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [{ perspective: 500 }, { rotateY: '90deg' }],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateY: delayFunction(delay, animation('0deg', config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipInEasyY();\n    }\n}\nexport class FlipOutXUp extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateX: '0deg' },\n                            { translateY: 0 },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateX: delayFunction(delay, animation('90deg', config)) },\n                            {\n                                translateY: delayFunction(delay, animation(-targetValues.currentHeight, config)),\n                            },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipOutXUp();\n    }\n}\nexport class FlipOutYLeft extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateY: '0deg' },\n                            { translateX: 0 },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateY: delayFunction(delay, animation('-90deg', config)) },\n                            {\n                                translateX: delayFunction(delay, animation(-targetValues.currentWidth, config)),\n                            },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipOutYLeft();\n    }\n}\nexport class FlipOutXDown extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateX: '0deg' },\n                            { translateY: 0 },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateX: delayFunction(delay, animation('-90deg', config)) },\n                            {\n                                translateY: delayFunction(delay, animation(targetValues.currentHeight, config)),\n                            },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipOutXDown();\n    }\n}\nexport class FlipOutYRight extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (targetValues) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [\n                            { perspective: 500 },\n                            { rotateY: '0deg' },\n                            { translateX: 0 },\n                        ],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateY: delayFunction(delay, animation('90deg', config)) },\n                            {\n                                translateX: delayFunction(delay, animation(targetValues.currentWidth, config)),\n                            },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipOutYRight();\n    }\n}\nexport class FlipOutEasyX extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return () => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [{ perspective: 500 }, { rotateX: '0deg' }],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateX: delayFunction(delay, animation('90deg', config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipOutEasyX();\n    }\n}\nexport class FlipOutEasyY extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return () => {\n                'worklet';\n                return {\n                    initialValues: {\n                        transform: [{ perspective: 500 }, { rotateY: '0deg' }],\n                    },\n                    animations: {\n                        transform: [\n                            { perspective: delayFunction(delay, animation(500, config)) },\n                            { rotateY: delayFunction(delay, animation('90deg', config)) },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new FlipOutEasyY();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}