{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahma\\\\Desktop\\\\Projects\\\\Python\\\\website\\\\personal-website\\\\frontend\\\\app\\\\src\\\\components\\\\svg\\\\Square.js\",\n    _s = $RefreshSig$();\n\nimport { StyleSheet, View, Image, Text, Animated, Dimensions } from \"react-native\";\nimport React, { useRef } from 'react';\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pathColor = \"black\";\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\nconst vb = `0 0 ${windowWidth} ${windowHeight}`; // const path = {\n//     transition: {\n//     duration: 4, //Change this to either slow or hasten the animation\n//     ease: \"easeInOut\",\n// },\n// variants: {\n//     visible: {\n//         pathLength: 1, //Change this to determine how much of the path is drawn when first rendered\n// },\n// hidden: {\n//     pathLength: 0,\n//     },\n// },\n// };\n\nconst styles = StyleSheet.create({\n  box: {\n    width: 150,\n    height: 150,\n    backgroundColor: \"purple\",\n    borderRadius: 30\n  },\n  circle: {\n    width: 100,\n    height: 100,\n    borderRadius: 100 / 2,\n    backgroundColor: \"red\"\n  }\n}); // const draw = {\n//     hidden: { pathLength: 0, opacity: 0 },\n//     visible: (i) => {\n//       const delay = 1 + i * 0.5;\n//       return {\n//         pathLength: 1,\n//         opacity: 1,\n//         transition: {\n//           pathLength: { delay, type: \"spring\", duration: 1.5, bounce: 0 },\n//           opacity: { delay, duration: 0.01 }\n//         }\n//       };\n//     }\n//   };\n\nlet {\n  x,\n  y,\n  width,\n  height\n} = document.querySelector(\"body\").getBoundingClientRect();\nlet cubeSize = 500;\n\nfunction generateRandomLocation() {\n  return {\n    x: Math.floor(Math.random() * (width - cubeSize)),\n    y: Math.floor(Math.random() * (height - cubeSize))\n  };\n}\n\nconst Coords = () => {\n  _s();\n\n  const pos = useRef({\n    position: 'absolute',\n    top: Math.floor(Math.random() * 50),\n    left: \"50%\",\n    transform: \"translate(-50% -50%)\"\n  });\n};\n/* Generate components */\n\n\n_s(Coords, \"Bk8L/vXQKa85jLtZDtY650RNt+g=\");\n\n_c = Coords;\n\nfunction generateComps() {\n  let components = [];\n\n  for (let i = 1; i <= 10; i++) {\n    let coords = generateRandomLocation();\n    console.log(coords);\n    components.push( /*#__PURE__*/_jsxDEV(motion.div, {\n      animate: {\n        rotate: 360,\n        duration: 0.5,\n        repeat: Infinity\n      },\n      transition: {\n        duration: 2,\n        ease: \"easeInOut\",\n        times: [0, 0.2, 0.5, 0.8, 1],\n        repeat: Infinity,\n        repeatDelay: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          width: 50,\n          height: 50,\n          backgroundColor: \"purple\",\n          borderRadius: 15\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this));\n  }\n\n  return components;\n} //letters are 2 boxes wide, 3 boxes tall\n\n\nfunction Square() {\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: generateComps()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 13\n  }, this) // <motion.svg width=\"500\" height=\"600\" viewBox=\"0 0 600 600\" initial=\"hidden\" animate=\"visible\">\n  //     <motion.circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"red\" variants={draw} custom={1}></motion.circle>\n  // </motion.svg>\n  ;\n}\n\n_c2 = Square;\nexport default Square;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Coords\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/src/components/svg/Square.js"],"names":["StyleSheet","View","Image","Text","Animated","Dimensions","React","useRef","motion","useMotionValue","pathColor","windowWidth","get","width","windowHeight","height","vb","styles","create","box","backgroundColor","borderRadius","circle","x","y","document","querySelector","getBoundingClientRect","cubeSize","generateRandomLocation","Math","floor","random","Coords","pos","position","top","left","transform","generateComps","components","i","coords","console","log","push","rotate","duration","repeat","Infinity","ease","times","repeatDelay","Square"],"mappings":"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","sourcesContent":["import { StyleSheet, View, Image, Text, Animated, Dimensions } from \"react-native\";\r\nimport React, { useRef } from 'react';\r\n\r\nimport { motion, useMotionValue } from \"framer-motion\";\r\n\r\nconst pathColor = \"black\";\r\n\r\nconst windowWidth = Dimensions.get(\"window\").width;\r\nconst windowHeight = Dimensions.get(\"window\").height;\r\n\r\nconst vb = `0 0 ${windowWidth} ${windowHeight}`\r\n\r\n// const path = {\r\n//     transition: {\r\n//     duration: 4, //Change this to either slow or hasten the animation\r\n//     ease: \"easeInOut\",\r\n// },\r\n// variants: {\r\n//     visible: {\r\n//         pathLength: 1, //Change this to determine how much of the path is drawn when first rendered\r\n// },\r\n// hidden: {\r\n//     pathLength: 0,\r\n//     },\r\n// },\r\n// };\r\n\r\nconst styles = StyleSheet.create({\r\n    box: {\r\n        width: 150,\r\n        height: 150,\r\n        backgroundColor: \"purple\",\r\n        borderRadius: 30\r\n    },\r\n    circle: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 100 / 2,\r\n        backgroundColor: \"red\",\r\n    }\r\n    \r\n})\r\n// const draw = {\r\n//     hidden: { pathLength: 0, opacity: 0 },\r\n//     visible: (i) => {\r\n//       const delay = 1 + i * 0.5;\r\n//       return {\r\n//         pathLength: 1,\r\n//         opacity: 1,\r\n//         transition: {\r\n//           pathLength: { delay, type: \"spring\", duration: 1.5, bounce: 0 },\r\n//           opacity: { delay, duration: 0.01 }\r\n//         }\r\n//       };\r\n//     }\r\n//   };\r\n\r\n\r\nlet { x, y, width, height} = document.querySelector(\"body\").getBoundingClientRect();\r\nlet cubeSize = 500;\r\nfunction generateRandomLocation() {\r\n  return {\r\n    x: Math.floor(Math.random() * (width - cubeSize)),\r\n    y: Math.floor(Math.random() * (height - cubeSize))\r\n  };\r\n}\r\n\r\nconst Coords = () => {\r\n    const pos = useRef({\r\n        position: 'absolute',\r\n        top: Math.floor(Math.random() * 50),\r\n        left: \"50%\",\r\n        transform: \"translate(-50% -50%)\",\r\n    })\r\n}\r\n\r\n/* Generate components */\r\nfunction generateComps() {\r\n    let components = []\r\n    for (let i = 1; i <= 10; i++) {\r\n        let coords = generateRandomLocation();\r\n        console.log(coords)\r\n        components.push(\r\n            <motion.div animate={{rotate: 360, duration: 0.5, repeat: Infinity}}   \r\n            transition={{\r\n            duration: 2,\r\n            ease: \"easeInOut\",\r\n            times: [0, 0.2, 0.5, 0.8, 1],\r\n            repeat: Infinity,\r\n            repeatDelay: 1\r\n        }}>\r\n        <View style={{width: 50, height: 50, backgroundColor: \"purple\", borderRadius: 15}}></View>\r\n        </motion.div>\r\n        )\r\n    }\r\n    return components\r\n}\r\n\r\n//letters are 2 boxes wide, 3 boxes tall\r\nfunction Square() {\r\n    return(\r\n            <View>{generateComps()}</View>\r\n    // <motion.svg width=\"500\" height=\"600\" viewBox=\"0 0 600 600\" initial=\"hidden\" animate=\"visible\">\r\n    //     <motion.circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"red\" variants={draw} custom={1}></motion.circle>\r\n    // </motion.svg>\r\n    )\r\n}\r\n\r\nexport default Square;\r\n\r\n"]},"metadata":{},"sourceType":"module"}