{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCachedDescriptors = createCachedDescriptors;\nexports.createDescriptor = createDescriptor;\nexports.createUncachedDescriptors = createUncachedDescriptors;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _files = require(\"./files\");\n\nvar _item = require(\"./item\");\n\nvar _caching = require(\"./caching\");\n\nvar _resolveTargets = require(\"./resolve-targets\");\n\nfunction isEqualDescriptor(a, b) {\n  return a.name === b.name && a.value === b.value && a.options === b.options && a.dirname === b.dirname && a.alias === b.alias && a.ownPass === b.ownPass && (a.file && a.file.request) === (b.file && b.file.request) && (a.file && a.file.resolved) === (b.file && b.file.resolved);\n}\n\nfunction* handlerOf(value) {\n  return value;\n}\n\nfunction optionsWithResolvedBrowserslistConfigFile(options, dirname) {\n  if (typeof options.browserslistConfigFile === \"string\") {\n    options.browserslistConfigFile = (0, _resolveTargets.resolveBrowserslistConfigFile)(options.browserslistConfigFile, dirname);\n  }\n\n  return options;\n}\n\nfunction createCachedDescriptors(dirname, options, alias) {\n  const {\n    plugins,\n    presets,\n    passPerPreset\n  } = options;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    plugins: plugins ? () => createCachedPluginDescriptors(plugins, dirname)(alias) : () => handlerOf([]),\n    presets: presets ? () => createCachedPresetDescriptors(presets, dirname)(alias)(!!passPerPreset) : () => handlerOf([])\n  };\n}\n\nfunction createUncachedDescriptors(dirname, options, alias) {\n  let plugins;\n  let presets;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n\n    *plugins() {\n      if (!plugins) {\n        plugins = yield* createPluginDescriptors(options.plugins || [], dirname, alias);\n      }\n\n      return plugins;\n    },\n\n    *presets() {\n      if (!presets) {\n        presets = yield* createPresetDescriptors(options.presets || [], dirname, alias, !!options.passPerPreset);\n      }\n\n      return presets;\n    }\n\n  };\n}\n\nconst PRESET_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPresetDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCacheSync)(alias => (0, _caching.makeStrongCache)(function* (passPerPreset) {\n    const descriptors = yield* createPresetDescriptors(items, dirname, alias, passPerPreset);\n    return descriptors.map(desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc));\n  }));\n});\nconst PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPluginDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCache)(function* (alias) {\n    const descriptors = yield* createPluginDescriptors(items, dirname, alias);\n    return descriptors.map(desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc));\n  });\n});\nconst DEFAULT_OPTIONS = {};\n\nfunction loadCachedDescriptor(cache, desc) {\n  const {\n    value,\n    options = DEFAULT_OPTIONS\n  } = desc;\n  if (options === false) return desc;\n  let cacheByOptions = cache.get(value);\n\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n\n  let possibilities = cacheByOptions.get(options);\n\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n\n  if (possibilities.indexOf(desc) === -1) {\n    const matches = possibilities.filter(possibility => isEqualDescriptor(possibility, desc));\n\n    if (matches.length > 0) {\n      return matches[0];\n    }\n\n    possibilities.push(desc);\n  }\n\n  return desc;\n}\n\nfunction* createPresetDescriptors(items, dirname, alias, passPerPreset) {\n  return yield* createDescriptors(\"preset\", items, dirname, alias, passPerPreset);\n}\n\nfunction* createPluginDescriptors(items, dirname, alias) {\n  return yield* createDescriptors(\"plugin\", items, dirname, alias);\n}\n\nfunction* createDescriptors(type, items, dirname, alias, ownPass) {\n  const descriptors = yield* _gensync().all(items.map((item, index) => createDescriptor(item, dirname, {\n    type,\n    alias: `${alias}$${index}`,\n    ownPass: !!ownPass\n  })));\n  assertNoDuplicates(descriptors);\n  return descriptors;\n}\n\nfunction* createDescriptor(pair, dirname, _ref) {\n  let {\n    type,\n    alias,\n    ownPass\n  } = _ref;\n  const desc = (0, _item.getItemDescriptor)(pair);\n\n  if (desc) {\n    return desc;\n  }\n\n  let name;\n  let options;\n  let value = pair;\n\n  if (Array.isArray(value)) {\n    if (value.length === 3) {\n      [value, options, name] = value;\n    } else {\n      [value, options] = value;\n    }\n  }\n\n  let file = undefined;\n  let filepath = null;\n\n  if (typeof value === \"string\") {\n    if (typeof type !== \"string\") {\n      throw new Error(\"To resolve a string-based item, the type of item must be given\");\n    }\n\n    const resolver = type === \"plugin\" ? _files.loadPlugin : _files.loadPreset;\n    const request = value;\n    ({\n      filepath,\n      value\n    } = yield* resolver(value, dirname));\n    file = {\n      request,\n      resolved: filepath\n    };\n  }\n\n  if (!value) {\n    throw new Error(`Unexpected falsy value: ${String(value)}`);\n  }\n\n  if (typeof value === \"object\" && value.__esModule) {\n    if (value.default) {\n      value = value.default;\n    } else {\n      throw new Error(\"Must export a default export when using ES6 modules.\");\n    }\n  }\n\n  if (typeof value !== \"object\" && typeof value !== \"function\") {\n    throw new Error(`Unsupported format: ${typeof value}. Expected an object or a function.`);\n  }\n\n  if (filepath !== null && typeof value === \"object\" && value) {\n    throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`);\n  }\n\n  return {\n    name,\n    alias: filepath || alias,\n    value,\n    options,\n    dirname,\n    ownPass,\n    file\n  };\n}\n\nfunction assertNoDuplicates(items) {\n  const map = new Map();\n\n  for (const item of items) {\n    if (typeof item.value !== \"function\") continue;\n    let nameMap = map.get(item.value);\n\n    if (!nameMap) {\n      nameMap = new Set();\n      map.set(item.value, nameMap);\n    }\n\n    if (nameMap.has(item.name)) {\n      const conflicts = items.filter(i => i.value === item.value);\n      throw new Error([`Duplicate plugin/preset detected.`, `If you'd like to use two separate instances of a plugin,`, `they need separate names, e.g.`, ``, `  plugins: [`, `    ['some-plugin', {}],`, `    ['some-plugin', {}, 'some unique name'],`, `  ]`, ``, `Duplicates detected are:`, `${JSON.stringify(conflicts, null, 2)}`].join(\"\\n\"));\n    }\n\n    nameMap.add(item.name);\n  }\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/@babel/core/lib/config/config-descriptors.js"],"names":["Object","defineProperty","exports","value","createCachedDescriptors","createDescriptor","createUncachedDescriptors","_gensync","data","require","_files","_item","_caching","_resolveTargets","isEqualDescriptor","a","b","name","options","dirname","alias","ownPass","file","request","resolved","handlerOf","optionsWithResolvedBrowserslistConfigFile","browserslistConfigFile","resolveBrowserslistConfigFile","plugins","presets","passPerPreset","createCachedPluginDescriptors","createCachedPresetDescriptors","createPluginDescriptors","createPresetDescriptors","PRESET_DESCRIPTOR_CACHE","WeakMap","makeWeakCacheSync","items","cache","using","dir","makeStrongCacheSync","makeStrongCache","descriptors","map","desc","loadCachedDescriptor","PLUGIN_DESCRIPTOR_CACHE","DEFAULT_OPTIONS","cacheByOptions","get","set","possibilities","indexOf","matches","filter","possibility","length","push","createDescriptors","type","all","item","index","assertNoDuplicates","pair","getItemDescriptor","Array","isArray","undefined","filepath","Error","resolver","loadPlugin","loadPreset","String","__esModule","default","Map","nameMap","Set","has","conflicts","i","JSON","stringify","join","add"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCachedDescriptors = createCachedDescriptors;\nexports.createDescriptor = createDescriptor;\nexports.createUncachedDescriptors = createUncachedDescriptors;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _files = require(\"./files\");\n\nvar _item = require(\"./item\");\n\nvar _caching = require(\"./caching\");\n\nvar _resolveTargets = require(\"./resolve-targets\");\n\nfunction isEqualDescriptor(a, b) {\n  return a.name === b.name && a.value === b.value && a.options === b.options && a.dirname === b.dirname && a.alias === b.alias && a.ownPass === b.ownPass && (a.file && a.file.request) === (b.file && b.file.request) && (a.file && a.file.resolved) === (b.file && b.file.resolved);\n}\n\nfunction* handlerOf(value) {\n  return value;\n}\n\nfunction optionsWithResolvedBrowserslistConfigFile(options, dirname) {\n  if (typeof options.browserslistConfigFile === \"string\") {\n    options.browserslistConfigFile = (0, _resolveTargets.resolveBrowserslistConfigFile)(options.browserslistConfigFile, dirname);\n  }\n\n  return options;\n}\n\nfunction createCachedDescriptors(dirname, options, alias) {\n  const {\n    plugins,\n    presets,\n    passPerPreset\n  } = options;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    plugins: plugins ? () => createCachedPluginDescriptors(plugins, dirname)(alias) : () => handlerOf([]),\n    presets: presets ? () => createCachedPresetDescriptors(presets, dirname)(alias)(!!passPerPreset) : () => handlerOf([])\n  };\n}\n\nfunction createUncachedDescriptors(dirname, options, alias) {\n  let plugins;\n  let presets;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n\n    *plugins() {\n      if (!plugins) {\n        plugins = yield* createPluginDescriptors(options.plugins || [], dirname, alias);\n      }\n\n      return plugins;\n    },\n\n    *presets() {\n      if (!presets) {\n        presets = yield* createPresetDescriptors(options.presets || [], dirname, alias, !!options.passPerPreset);\n      }\n\n      return presets;\n    }\n\n  };\n}\n\nconst PRESET_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPresetDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCacheSync)(alias => (0, _caching.makeStrongCache)(function* (passPerPreset) {\n    const descriptors = yield* createPresetDescriptors(items, dirname, alias, passPerPreset);\n    return descriptors.map(desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc));\n  }));\n});\nconst PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPluginDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCache)(function* (alias) {\n    const descriptors = yield* createPluginDescriptors(items, dirname, alias);\n    return descriptors.map(desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc));\n  });\n});\nconst DEFAULT_OPTIONS = {};\n\nfunction loadCachedDescriptor(cache, desc) {\n  const {\n    value,\n    options = DEFAULT_OPTIONS\n  } = desc;\n  if (options === false) return desc;\n  let cacheByOptions = cache.get(value);\n\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n\n  let possibilities = cacheByOptions.get(options);\n\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n\n  if (possibilities.indexOf(desc) === -1) {\n    const matches = possibilities.filter(possibility => isEqualDescriptor(possibility, desc));\n\n    if (matches.length > 0) {\n      return matches[0];\n    }\n\n    possibilities.push(desc);\n  }\n\n  return desc;\n}\n\nfunction* createPresetDescriptors(items, dirname, alias, passPerPreset) {\n  return yield* createDescriptors(\"preset\", items, dirname, alias, passPerPreset);\n}\n\nfunction* createPluginDescriptors(items, dirname, alias) {\n  return yield* createDescriptors(\"plugin\", items, dirname, alias);\n}\n\nfunction* createDescriptors(type, items, dirname, alias, ownPass) {\n  const descriptors = yield* _gensync().all(items.map((item, index) => createDescriptor(item, dirname, {\n    type,\n    alias: `${alias}$${index}`,\n    ownPass: !!ownPass\n  })));\n  assertNoDuplicates(descriptors);\n  return descriptors;\n}\n\nfunction* createDescriptor(pair, dirname, {\n  type,\n  alias,\n  ownPass\n}) {\n  const desc = (0, _item.getItemDescriptor)(pair);\n\n  if (desc) {\n    return desc;\n  }\n\n  let name;\n  let options;\n  let value = pair;\n\n  if (Array.isArray(value)) {\n    if (value.length === 3) {\n      [value, options, name] = value;\n    } else {\n      [value, options] = value;\n    }\n  }\n\n  let file = undefined;\n  let filepath = null;\n\n  if (typeof value === \"string\") {\n    if (typeof type !== \"string\") {\n      throw new Error(\"To resolve a string-based item, the type of item must be given\");\n    }\n\n    const resolver = type === \"plugin\" ? _files.loadPlugin : _files.loadPreset;\n    const request = value;\n    ({\n      filepath,\n      value\n    } = yield* resolver(value, dirname));\n    file = {\n      request,\n      resolved: filepath\n    };\n  }\n\n  if (!value) {\n    throw new Error(`Unexpected falsy value: ${String(value)}`);\n  }\n\n  if (typeof value === \"object\" && value.__esModule) {\n    if (value.default) {\n      value = value.default;\n    } else {\n      throw new Error(\"Must export a default export when using ES6 modules.\");\n    }\n  }\n\n  if (typeof value !== \"object\" && typeof value !== \"function\") {\n    throw new Error(`Unsupported format: ${typeof value}. Expected an object or a function.`);\n  }\n\n  if (filepath !== null && typeof value === \"object\" && value) {\n    throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`);\n  }\n\n  return {\n    name,\n    alias: filepath || alias,\n    value,\n    options,\n    dirname,\n    ownPass,\n    file\n  };\n}\n\nfunction assertNoDuplicates(items) {\n  const map = new Map();\n\n  for (const item of items) {\n    if (typeof item.value !== \"function\") continue;\n    let nameMap = map.get(item.value);\n\n    if (!nameMap) {\n      nameMap = new Set();\n      map.set(item.value, nameMap);\n    }\n\n    if (nameMap.has(item.name)) {\n      const conflicts = items.filter(i => i.value === item.value);\n      throw new Error([`Duplicate plugin/preset detected.`, `If you'd like to use two separate instances of a plugin,`, `they need separate names, e.g.`, ``, `  plugins: [`, `    ['some-plugin', {}],`, `    ['some-plugin', {}, 'some unique name'],`, `  ]`, ``, `Duplicates detected are:`, `${JSON.stringify(conflicts, null, 2)}`].join(\"\\n\"));\n    }\n\n    nameMap.add(item.name);\n  }\n}"]},"metadata":{},"sourceType":"script"}