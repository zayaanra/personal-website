{"ast":null,"code":"/* global _WORKLET _getCurrentTime _frameTimestamp _eventTimestamp, _setGlobalConsole */\nimport NativeReanimatedModule from './NativeReanimated';\nimport { Platform } from 'react-native';\nimport { nativeShouldBeMock, shouldBeUseWeb, isWeb } from './PlatformChecker';\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n};\n\nif (global._setGlobalConsole === undefined) {\n  // it can happen when Reanimated plugin wasn't added, but the user uses the only API from version 1\n  global._setGlobalConsole = () => {// noop\n  };\n}\n\nconst testWorklet = () => {\n  'worklet';\n};\n\nexport const checkPluginState = function () {\n  let throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  if (!testWorklet.__workletHash && !shouldBeUseWeb()) {\n    if (throwError) {\n      throw new Error(\"Reanimated 2 failed to create a worklet, maybe you forgot to add Reanimated's babel plugin?\");\n    }\n\n    return false;\n  }\n\n  return true;\n};\nexport const isConfigured = function () {\n  let throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return checkPluginState(throwError) && !NativeReanimatedModule.useOnlyV1;\n};\nexport const isConfiguredCheck = () => {\n  if (!isConfigured(true)) {\n    throw new Error('If you want to use Reanimated 2 then go through our installation steps https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation');\n  }\n};\n\nfunction _toArrayReanimated(object) {\n  'worklet';\n\n  if (Array.isArray(object)) {\n    return object;\n  }\n\n  if (typeof Symbol !== 'undefined' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in Object(object)) {\n    return Array.from(object);\n  }\n\n  throw new Error('Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');\n}\n\nfunction _mergeObjectsReanimated() {\n  'worklet'; // we can't use rest parameters in worklets at the moment\n  // eslint-disable-next-line prefer-rest-params\n\n  const arr = Array.from(arguments);\n  return Object.assign.apply(null, [arr[0], ...arr.slice(1)]);\n}\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n\n  if (worklet._closure) {\n    const closure = worklet._closure;\n    Object.keys(closure).forEach(key => {\n      if (key === '_toConsumableArray') {\n        closure[key] = _toArrayReanimated;\n      }\n\n      if (key === '_objectSpread') {\n        closure[key] = _mergeObjectsReanimated;\n      }\n    });\n  }\n};\n\nfunction pushFrame(frame) {\n  NativeReanimatedModule.pushFrame(frame);\n}\n\nexport function requestFrame(frame) {\n  'worklet';\n\n  if (NativeReanimatedModule.native) {\n    requestAnimationFrame(frame);\n  } else {\n    pushFrame(frame);\n  }\n}\nglobal._WORKLET = false;\n\nglobal._log = function (s) {\n  console.log(s);\n};\n\nexport function runOnUI(worklet) {\n  return makeShareable(worklet);\n}\nexport function makeShareable(value) {\n  isConfiguredCheck();\n  return NativeReanimatedModule.makeShareable(value);\n}\nexport function getViewProp(viewTag, propName) {\n  return new Promise((resolve, reject) => {\n    return NativeReanimatedModule.getViewProp(viewTag, propName, result => {\n      if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nlet _getTimestamp;\n\nif (nativeShouldBeMock()) {\n  _getTimestamp = () => {\n    return NativeReanimatedModule.getTimestamp();\n  };\n} else {\n  _getTimestamp = () => {\n    'worklet';\n\n    if (_frameTimestamp) {\n      return _frameTimestamp;\n    }\n\n    if (_eventTimestamp) {\n      return _eventTimestamp;\n    }\n\n    return _getCurrentTime();\n  };\n}\n\nexport function getTimestamp() {\n  'worklet';\n\n  if (Platform.OS === 'web') {\n    return NativeReanimatedModule.getTimestamp();\n  }\n\n  return _getTimestamp();\n}\n\nfunction workletValueSetter(value) {\n  'worklet';\n\n  const previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame !== undefined) {\n    const animation = typeof value === 'function' ? value() : value; // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n\n    if (this._value === animation.current && !animation.isHigherOrder) {\n      animation.callback && animation.callback(true);\n      return;\n    } // animated set\n\n\n    const initializeAnimation = timestamp => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n\n    initializeAnimation(getTimestamp());\n\n    const step = timestamp => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false\n        /* finished */\n        );\n        return;\n      }\n\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      this._value = animation.current;\n\n      if (finished) {\n        animation.callback && animation.callback(true\n        /* finished */\n        );\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    if (_frameTimestamp) {\n      // frame\n      step(_frameTimestamp);\n    } else {\n      requestAnimationFrame(step);\n    }\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (this._value === value) {\n      return;\n    }\n\n    this._value = value;\n  }\n} // We cannot use pushFrame\n// so we use own implementation for js\n\n\nfunction workletValueSetterJS(value) {\n  const previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame) {\n    // animated set\n    const animation = typeof value === 'function' ? value() : value;\n\n    let initializeAnimation = timestamp => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n\n    const step = timestamp => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false\n        /* finished */\n        );\n        return;\n      }\n\n      if (initializeAnimation) {\n        initializeAnimation(timestamp);\n        initializeAnimation = null; // prevent closure from keeping ref to previous animation\n      }\n\n      const finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      this._setValue && this._setValue(animation.current);\n\n      if (finished) {\n        animation.callback && animation.callback(true\n        /* finished */\n        );\n      } else {\n        requestFrame(step);\n      }\n    };\n\n    this._animation = animation;\n    requestFrame(step);\n  } else {\n    this._setValue && this._setValue(value);\n  }\n}\n\nexport function makeMutable(value) {\n  isConfiguredCheck();\n  return NativeReanimatedModule.makeMutable(value);\n}\nexport function makeRemote() {\n  let object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  isConfiguredCheck();\n  return NativeReanimatedModule.makeRemote(object);\n}\nexport function startMapper(mapper) {\n  let inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let updater = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : () => {// noop\n  };\n  let viewDescriptors = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  isConfiguredCheck();\n  return NativeReanimatedModule.startMapper(mapper, inputs, outputs, updater, viewDescriptors);\n}\nexport function stopMapper(mapperId) {\n  NativeReanimatedModule.stopMapper(mapperId);\n}\nexport function runOnJS(fun) {\n  'worklet';\n\n  if (!_WORKLET) {\n    return fun;\n  }\n\n  if (!fun.__callAsync) {\n    throw new Error(\"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\");\n  } else {\n    return fun.__callAsync;\n  }\n}\n\nif (!NativeReanimatedModule.useOnlyV1) {\n  NativeReanimatedModule.installCoreFunctions(NativeReanimatedModule.native ? workletValueSetter : workletValueSetterJS);\n\n  if (!isWeb() && isConfigured()) {\n    const capturableConsole = console;\n    runOnUI(() => {\n      'worklet';\n\n      const console = {\n        debug: runOnJS(capturableConsole.debug),\n        log: runOnJS(capturableConsole.log),\n        warn: runOnJS(capturableConsole.warn),\n        error: runOnJS(capturableConsole.error),\n        info: runOnJS(capturableConsole.info)\n      };\n\n      _setGlobalConsole(console);\n\n      global.performance = {\n        now: global._chronoNow\n      };\n    })();\n  }\n}\n\nlet featuresConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false\n};\nexport function enableLayoutAnimations(flag) {\n  let isCallByUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (!featuresConfig.setByUser && featuresConfig.enableLayoutAnimations !== flag) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/core.js"],"names":["NativeReanimatedModule","Platform","nativeShouldBeMock","shouldBeUseWeb","isWeb","global","__reanimatedWorkletInit","worklet","__worklet","_setGlobalConsole","undefined","testWorklet","checkPluginState","throwError","__workletHash","Error","isConfigured","useOnlyV1","isConfiguredCheck","_toArrayReanimated","object","Array","isArray","Symbol","iterator","Object","from","_mergeObjectsReanimated","arr","arguments","assign","apply","slice","_closure","closure","keys","forEach","key","pushFrame","frame","requestFrame","native","requestAnimationFrame","_WORKLET","_log","s","console","log","runOnUI","makeShareable","value","getViewProp","viewTag","propName","Promise","resolve","reject","result","substr","_getTimestamp","getTimestamp","_frameTimestamp","_eventTimestamp","_getCurrentTime","OS","workletValueSetter","previousAnimation","_animation","cancelled","onFrame","animation","_value","current","isHigherOrder","callback","initializeAnimation","timestamp","onStart","step","finished","workletValueSetterJS","_setValue","makeMutable","makeRemote","startMapper","mapper","inputs","outputs","updater","viewDescriptors","stopMapper","mapperId","runOnJS","fun","__callAsync","installCoreFunctions","capturableConsole","debug","warn","error","info","performance","now","_chronoNow","featuresConfig","enableLayoutAnimations","setByUser","flag","isCallByUser"],"mappings":"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","sourcesContent":["/* global _WORKLET _getCurrentTime _frameTimestamp _eventTimestamp, _setGlobalConsole */\nimport NativeReanimatedModule from './NativeReanimated';\nimport { Platform } from 'react-native';\nimport { nativeShouldBeMock, shouldBeUseWeb, isWeb } from './PlatformChecker';\nglobal.__reanimatedWorkletInit = function (worklet) {\n    worklet.__worklet = true;\n};\nif (global._setGlobalConsole === undefined) {\n    // it can happen when Reanimated plugin wasn't added, but the user uses the only API from version 1\n    global._setGlobalConsole = () => {\n        // noop\n    };\n}\nconst testWorklet = () => {\n    'worklet';\n};\nexport const checkPluginState = (throwError = true) => {\n    if (!testWorklet.__workletHash && !shouldBeUseWeb()) {\n        if (throwError) {\n            throw new Error(\"Reanimated 2 failed to create a worklet, maybe you forgot to add Reanimated's babel plugin?\");\n        }\n        return false;\n    }\n    return true;\n};\nexport const isConfigured = (throwError = false) => {\n    return checkPluginState(throwError) && !NativeReanimatedModule.useOnlyV1;\n};\nexport const isConfiguredCheck = () => {\n    if (!isConfigured(true)) {\n        throw new Error('If you want to use Reanimated 2 then go through our installation steps https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation');\n    }\n};\nfunction _toArrayReanimated(object) {\n    'worklet';\n    if (Array.isArray(object)) {\n        return object;\n    }\n    if (typeof Symbol !== 'undefined' &&\n        (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in\n            Object(object)) {\n        return Array.from(object);\n    }\n    throw new Error('Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');\n}\nfunction _mergeObjectsReanimated() {\n    'worklet';\n    // we can't use rest parameters in worklets at the moment\n    // eslint-disable-next-line prefer-rest-params\n    const arr = Array.from(arguments);\n    return Object.assign.apply(null, [arr[0], ...arr.slice(1)]);\n}\nglobal.__reanimatedWorkletInit = function (worklet) {\n    worklet.__worklet = true;\n    if (worklet._closure) {\n        const closure = worklet._closure;\n        Object.keys(closure).forEach((key) => {\n            if (key === '_toConsumableArray') {\n                closure[key] = _toArrayReanimated;\n            }\n            if (key === '_objectSpread') {\n                closure[key] = _mergeObjectsReanimated;\n            }\n        });\n    }\n};\nfunction pushFrame(frame) {\n    NativeReanimatedModule.pushFrame(frame);\n}\nexport function requestFrame(frame) {\n    'worklet';\n    if (NativeReanimatedModule.native) {\n        requestAnimationFrame(frame);\n    }\n    else {\n        pushFrame(frame);\n    }\n}\nglobal._WORKLET = false;\nglobal._log = function (s) {\n    console.log(s);\n};\nexport function runOnUI(worklet) {\n    return makeShareable(worklet);\n}\nexport function makeShareable(value) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.makeShareable(value);\n}\nexport function getViewProp(viewTag, propName) {\n    return new Promise((resolve, reject) => {\n        return NativeReanimatedModule.getViewProp(viewTag, propName, (result) => {\n            if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n                reject(result);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    });\n}\nlet _getTimestamp;\nif (nativeShouldBeMock()) {\n    _getTimestamp = () => {\n        return NativeReanimatedModule.getTimestamp();\n    };\n}\nelse {\n    _getTimestamp = () => {\n        'worklet';\n        if (_frameTimestamp) {\n            return _frameTimestamp;\n        }\n        if (_eventTimestamp) {\n            return _eventTimestamp;\n        }\n        return _getCurrentTime();\n    };\n}\nexport function getTimestamp() {\n    'worklet';\n    if (Platform.OS === 'web') {\n        return NativeReanimatedModule.getTimestamp();\n    }\n    return _getTimestamp();\n}\nfunction workletValueSetter(value) {\n    'worklet';\n    const previousAnimation = this._animation;\n    if (previousAnimation) {\n        previousAnimation.cancelled = true;\n        this._animation = null;\n    }\n    if (typeof value === 'function' ||\n        (value !== null &&\n            typeof value === 'object' &&\n            value.onFrame !== undefined)) {\n        const animation = typeof value === 'function'\n            ? value()\n            : value;\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n        // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n        if (this._value === animation.current && !animation.isHigherOrder) {\n            animation.callback && animation.callback(true);\n            return;\n        }\n        // animated set\n        const initializeAnimation = (timestamp) => {\n            animation.onStart(animation, this.value, timestamp, previousAnimation);\n        };\n        initializeAnimation(getTimestamp());\n        const step = (timestamp) => {\n            if (animation.cancelled) {\n                animation.callback && animation.callback(false /* finished */);\n                return;\n            }\n            const finished = animation.onFrame(animation, timestamp);\n            animation.finished = true;\n            animation.timestamp = timestamp;\n            this._value = animation.current;\n            if (finished) {\n                animation.callback && animation.callback(true /* finished */);\n            }\n            else {\n                requestAnimationFrame(step);\n            }\n        };\n        this._animation = animation;\n        if (_frameTimestamp) {\n            // frame\n            step(_frameTimestamp);\n        }\n        else {\n            requestAnimationFrame(step);\n        }\n    }\n    else {\n        // prevent setting again to the same value\n        // and triggering the mappers that treat this value as an input\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n    }\n}\n// We cannot use pushFrame\n// so we use own implementation for js\nfunction workletValueSetterJS(value) {\n    const previousAnimation = this._animation;\n    if (previousAnimation) {\n        previousAnimation.cancelled = true;\n        this._animation = null;\n    }\n    if (typeof value === 'function' ||\n        (value !== null &&\n            typeof value === 'object' &&\n            value.onFrame)) {\n        // animated set\n        const animation = typeof value === 'function'\n            ? value()\n            : value;\n        let initializeAnimation = (timestamp) => {\n            animation.onStart(animation, this.value, timestamp, previousAnimation);\n        };\n        const step = (timestamp) => {\n            if (animation.cancelled) {\n                animation.callback && animation.callback(false /* finished */);\n                return;\n            }\n            if (initializeAnimation) {\n                initializeAnimation(timestamp);\n                initializeAnimation = null; // prevent closure from keeping ref to previous animation\n            }\n            const finished = animation.onFrame(animation, timestamp);\n            animation.timestamp = timestamp;\n            this._setValue && this._setValue(animation.current);\n            if (finished) {\n                animation.callback && animation.callback(true /* finished */);\n            }\n            else {\n                requestFrame(step);\n            }\n        };\n        this._animation = animation;\n        requestFrame(step);\n    }\n    else {\n        this._setValue && this._setValue(value);\n    }\n}\nexport function makeMutable(value) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.makeMutable(value);\n}\nexport function makeRemote(object = {}) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.makeRemote(object);\n}\nexport function startMapper(mapper, inputs = [], outputs = [], updater = () => {\n    // noop\n}, viewDescriptors = []) {\n    isConfiguredCheck();\n    return NativeReanimatedModule.startMapper(mapper, inputs, outputs, updater, viewDescriptors);\n}\nexport function stopMapper(mapperId) {\n    NativeReanimatedModule.stopMapper(mapperId);\n}\nexport function runOnJS(fun) {\n    'worklet';\n    if (!_WORKLET) {\n        return fun;\n    }\n    if (!fun.__callAsync) {\n        throw new Error(\"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\");\n    }\n    else {\n        return fun.__callAsync;\n    }\n}\nif (!NativeReanimatedModule.useOnlyV1) {\n    NativeReanimatedModule.installCoreFunctions(NativeReanimatedModule.native\n        ? workletValueSetter\n        : workletValueSetterJS);\n    if (!isWeb() && isConfigured()) {\n        const capturableConsole = console;\n        runOnUI(() => {\n            'worklet';\n            const console = {\n                debug: runOnJS(capturableConsole.debug),\n                log: runOnJS(capturableConsole.log),\n                warn: runOnJS(capturableConsole.warn),\n                error: runOnJS(capturableConsole.error),\n                info: runOnJS(capturableConsole.info),\n            };\n            _setGlobalConsole(console);\n            global.performance = {\n                now: global._chronoNow,\n            };\n        })();\n    }\n}\nlet featuresConfig = {\n    enableLayoutAnimations: false,\n    setByUser: false,\n};\nexport function enableLayoutAnimations(flag, isCallByUser = true) {\n    if (isCallByUser) {\n        featuresConfig = {\n            enableLayoutAnimations: flag,\n            setByUser: true,\n        };\n        NativeReanimatedModule.enableLayoutAnimations(flag);\n    }\n    else if (!featuresConfig.setByUser &&\n        featuresConfig.enableLayoutAnimations !== flag) {\n        featuresConfig.enableLayoutAnimations = flag;\n        NativeReanimatedModule.enableLayoutAnimations(flag);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}