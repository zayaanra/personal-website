{"ast":null,"code":"import { ComplexAnimationBuilder } from '../animationBuilder/ComplexAnimationBuilder';\nexport class LinearTransition extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const callback = this.callbackV;\n      const delay = this.getDelay();\n      return values => {\n        'worklet';\n\n        return {\n          initialValues: {\n            originX: values.currentOriginX,\n            originY: values.currentOriginY,\n            width: values.currentWidth,\n            height: values.currentHeight\n          },\n          animations: {\n            originX: delayFunction(delay, animation(values.targetOriginX, config)),\n            originY: delayFunction(delay, animation(values.targetOriginY, config)),\n            width: delayFunction(delay, animation(values.targetWidth, config)),\n            height: delayFunction(delay, animation(values.targetHeight, config))\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new LinearTransition();\n  }\n\n}\nexport const Layout = LinearTransition;","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultTransitions/LinearTransition.js"],"names":["ComplexAnimationBuilder","LinearTransition","constructor","arguments","build","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","callback","callbackV","delay","getDelay","values","initialValues","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","animations","targetOriginX","targetOriginY","targetWidth","targetHeight","createInstance","Layout"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,6CAAxC;AACA,OAAO,MAAMC,gBAAN,SAA+BD,uBAA/B,CAAuD;AAC1DE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;;AACA,SAAKC,KAAL,GAAa,MAAM;AACf,YAAMC,aAAa,GAAG,KAAKC,gBAAL,EAAtB;AACA,YAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsB,KAAKC,qBAAL,EAA5B;AACA,YAAMC,QAAQ,GAAG,KAAKC,SAAtB;AACA,YAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd;AACA,aAAQC,MAAD,IAAY;AACf;;AACA,eAAO;AACHC,UAAAA,aAAa,EAAE;AACXC,YAAAA,OAAO,EAAEF,MAAM,CAACG,cADL;AAEXC,YAAAA,OAAO,EAAEJ,MAAM,CAACK,cAFL;AAGXC,YAAAA,KAAK,EAAEN,MAAM,CAACO,YAHH;AAIXC,YAAAA,MAAM,EAAER,MAAM,CAACS;AAJJ,WADZ;AAOHC,UAAAA,UAAU,EAAE;AACRR,YAAAA,OAAO,EAAEX,aAAa,CAACO,KAAD,EAAQL,SAAS,CAACO,MAAM,CAACW,aAAR,EAAuBjB,MAAvB,CAAjB,CADd;AAERU,YAAAA,OAAO,EAAEb,aAAa,CAACO,KAAD,EAAQL,SAAS,CAACO,MAAM,CAACY,aAAR,EAAuBlB,MAAvB,CAAjB,CAFd;AAGRY,YAAAA,KAAK,EAAEf,aAAa,CAACO,KAAD,EAAQL,SAAS,CAACO,MAAM,CAACa,WAAR,EAAqBnB,MAArB,CAAjB,CAHZ;AAIRc,YAAAA,MAAM,EAAEjB,aAAa,CAACO,KAAD,EAAQL,SAAS,CAACO,MAAM,CAACc,YAAR,EAAsBpB,MAAtB,CAAjB;AAJb,WAPT;AAaHE,UAAAA,QAAQ,EAAEA;AAbP,SAAP;AAeH,OAjBD;AAkBH,KAvBD;AAwBH;;AACoB,SAAdmB,cAAc,GAAG;AACpB,WAAO,IAAI5B,gBAAJ,EAAP;AACH;;AA9ByD;AAgC9D,OAAO,MAAM6B,MAAM,GAAG7B,gBAAf","sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder/ComplexAnimationBuilder';\nexport class LinearTransition extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const callback = this.callbackV;\n            const delay = this.getDelay();\n            return (values) => {\n                'worklet';\n                return {\n                    initialValues: {\n                        originX: values.currentOriginX,\n                        originY: values.currentOriginY,\n                        width: values.currentWidth,\n                        height: values.currentHeight,\n                    },\n                    animations: {\n                        originX: delayFunction(delay, animation(values.targetOriginX, config)),\n                        originY: delayFunction(delay, animation(values.targetOriginY, config)),\n                        width: delayFunction(delay, animation(values.targetWidth, config)),\n                        height: delayFunction(delay, animation(values.targetHeight, config)),\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new LinearTransition();\n    }\n}\nexport const Layout = LinearTransition;\n"]},"metadata":{},"sourceType":"module"}