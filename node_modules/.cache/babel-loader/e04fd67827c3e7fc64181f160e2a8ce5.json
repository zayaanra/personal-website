{"ast":null,"code":"import { interpolateColor } from \"react-native-reanimated\";\nimport { clamp, fract, mix } from \"./Math\";\nexport var isLight = function isLight(r, g, b) {\n  \"worklet\";\n\n  var L = 0.299 * r + 0.587 * g + 0.114 * b;\n  return L > 186;\n};\nexport var mixColor = function mixColor(value, color1, color2) {\n  \"worklet\";\n\n  var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"RGB\";\n  return interpolateColor(value, [0, 1], [color1, color2], colorSpace);\n};\nexport var hsv2rgb = function hsv2rgb(h, s, v) {\n  \"worklet\";\n\n  var K = {\n    x: 1,\n    y: 2 / 3,\n    z: 1 / 3,\n    w: 3\n  };\n  var p = {\n    x: Math.abs(fract(h + K.x) * 6 - K.w),\n    y: Math.abs(fract(h + K.y) * 6 - K.w),\n    z: Math.abs(fract(h + K.z) * 6 - K.w)\n  };\n  var rgb = {\n    x: v * mix(s, K.x, clamp(p.x - K.x, 0, 1)),\n    y: v * mix(s, K.x, clamp(p.y - K.x, 0, 1)),\n    z: v * mix(s, K.x, clamp(p.z - K.x, 0, 1))\n  };\n  var r = Math.round(rgb.x * 255);\n  var g = Math.round(rgb.y * 255);\n  var b = Math.round(rgb.z * 255);\n  return {\n    r: r,\n    g: g,\n    b: b\n  };\n};\nexport var opacity = function opacity(c) {\n  \"worklet\";\n\n  return (c >> 24 & 255) / 255;\n};\nexport var red = function red(c) {\n  \"worklet\";\n\n  return c >> 16 & 255;\n};\nexport var green = function green(c) {\n  \"worklet\";\n\n  return c >> 8 & 255;\n};\nexport var blue = function blue(c) {\n  \"worklet\";\n\n  return c & 255;\n};","map":{"version":3,"sources":["C:\\Users\\rahma\\Desktop\\Projects\\Python\\website\\personal-website\\frontend\\app\\node_modules\\react-native-redash\\lib\\module\\Colors.ts"],"names":["isLight","L","mixColor","colorSpace","interpolateColor","hsv2rgb","K","x","y","z","w","p","Math","fract","h","rgb","v","mix","clamp","r","g","b","opacity","c","red","green","blue"],"mappings":"AAAA,SAAA,gBAAA,QAAA,yBAAA;AAEA,SAAA,KAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA;AAQA,OAAO,IAAMA,OAAO,GAAPA,SAAAA,OAAAA,CAAU,CAAVA,EAAU,CAAVA,EAAU,CAAVA,EAA+C;AAC1D;;AACA,MAAMC,CAAC,GAAG,QAAA,CAAA,GAAY,QAAZ,CAAA,GAAwB,QAAlC,CAAA;AACA,SAAOA,CAAC,GAAR,GAAA;AAHK,CAAA;AAcP,OAAO,IAAMC,QAAQ,GAARA,SAAAA,QAAAA,CAAW,KAAXA,EAAW,MAAXA,EAAW,MAAXA,EAKR;AACH;;AAFAC,MAAAA,UACG,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADyB,KAA5BA;AAGA,SAAOC,gBAAgB,CAAA,KAAA,EAAQ,CAAA,CAAA,EAAR,CAAQ,CAAR,EAAgB,CAAA,MAAA,EAAhB,MAAgB,CAAhB,EAAvB,UAAuB,CAAvB;AAPK,CAAA;AAUP,OAAO,IAAMC,OAAO,GAAPA,SAAAA,OAAAA,CAAU,CAAVA,EAAU,CAAVA,EAAU,CAAVA,EAA+C;AAC1D;;AACA,MAAMC,CAAC,GAAG;AACRC,IAAAA,CAAC,EADO,CAAA;AAERC,IAAAA,CAAC,EAAE,IAFK,CAAA;AAGRC,IAAAA,CAAC,EAAE,IAHK,CAAA;AAIRC,IAAAA,CAAC,EAJH;AAAU,GAAV;AAMA,MAAMC,CAAC,GAAG;AACRJ,IAAAA,CAAC,EAAEK,IAAI,CAAJA,GAAAA,CAASC,KAAK,CAACC,CAAC,GAAGR,CAAC,CAAXO,CAAK,CAALA,GAAAA,CAAAA,GAAqBP,CAAC,CAD1B,CACLM,CADK;AAERJ,IAAAA,CAAC,EAAEI,IAAI,CAAJA,GAAAA,CAASC,KAAK,CAACC,CAAC,GAAGR,CAAC,CAAXO,CAAK,CAALA,GAAAA,CAAAA,GAAqBP,CAAC,CAF1B,CAELM,CAFK;AAGRH,IAAAA,CAAC,EAAEG,IAAI,CAAJA,GAAAA,CAASC,KAAK,CAACC,CAAC,GAAGR,CAAC,CAAXO,CAAK,CAALA,GAAAA,CAAAA,GAAqBP,CAAC,CAHpC,CAGKM;AAHK,GAAV;AAMA,MAAMG,GAAG,GAAG;AACVR,IAAAA,CAAC,EAAES,CAAC,GAAGC,GAAG,CAAA,CAAA,EAAIX,CAAC,CAAL,CAAA,EAASY,KAAK,CAACP,CAAC,CAADA,CAAAA,GAAML,CAAC,CAAR,CAAA,EAAA,CAAA,EADd,CACc,CAAd,CADA;AAEVE,IAAAA,CAAC,EAAEQ,CAAC,GAAGC,GAAG,CAAA,CAAA,EAAIX,CAAC,CAAL,CAAA,EAASY,KAAK,CAACP,CAAC,CAADA,CAAAA,GAAML,CAAC,CAAR,CAAA,EAAA,CAAA,EAFd,CAEc,CAAd,CAFA;AAGVG,IAAAA,CAAC,EAAEO,CAAC,GAAGC,GAAG,CAAA,CAAA,EAAIX,CAAC,CAAL,CAAA,EAASY,KAAK,CAACP,CAAC,CAADA,CAAAA,GAAML,CAAC,CAAR,CAAA,EAAA,CAAA,EAH1B,CAG0B,CAAd;AAHA,GAAZ;AAMA,MAAMa,CAAC,GAAGP,IAAI,CAAJA,KAAAA,CAAWG,GAAG,CAAHA,CAAAA,GAArB,GAAUH,CAAV;AACA,MAAMQ,CAAC,GAAGR,IAAI,CAAJA,KAAAA,CAAWG,GAAG,CAAHA,CAAAA,GAArB,GAAUH,CAAV;AACA,MAAMS,CAAC,GAAGT,IAAI,CAAJA,KAAAA,CAAWG,GAAG,CAAHA,CAAAA,GAArB,GAAUH,CAAV;AAEA,SAAO;AAAEO,IAAAA,CAAC,EAAH,CAAA;AAAKC,IAAAA,CAAC,EAAN,CAAA;AAAQC,IAAAA,CAAC,EAAhB;AAAO,GAAP;AAxBK,CAAA;AA2BP,OAAO,IAAMC,OAAO,GAAPA,SAAAA,OAAAA,CAAU,CAAVA,EAAiC;AAC5C;;AACA,SAAO,CAAEC,CAAC,IAAF,EAACA,GAAF,GAAA,IAAP,GAAA;AAFK,CAAA;AAKP,OAAO,IAAMC,GAAG,GAAHA,SAAAA,GAAAA,CAAM,CAANA,EAA6B;AACxC;;AACA,SAAQD,CAAC,IAAF,EAACA,GAAR,GAAA;AAFK,CAAA;AAKP,OAAO,IAAME,KAAK,GAALA,SAAAA,KAAAA,CAAQ,CAARA,EAA+B;AAC1C;;AACA,SAAQF,CAAC,IAAF,CAACA,GAAR,GAAA;AAFK,CAAA;AAKP,OAAO,IAAMG,IAAI,GAAJA,SAAAA,IAAAA,CAAO,CAAPA,EAA8B;AACzC;;AACA,SAAOH,CAAC,GAAR,GAAA;AAFK,CAAA","sourcesContent":["import { interpolateColor } from \"react-native-reanimated\";\n\nimport { clamp, fract, mix } from \"./Math\";\n\nexport type AnimatedColor = string | number;\n\n/**\n * @summary Returns black or white depending on the value of the background color.\n * @worklet\n */\nexport const isLight = (r: number, g: number, b: number) => {\n  \"worklet\";\n  const L = 0.299 * r + 0.587 * g + 0.114 * b;\n  return L > 186;\n};\n\n/**\n * Interpolate color from 0 to 1\n * @param value\n * @param color1\n * @param color2\n * @param colorSpace\n * @worklet\n */\nexport const mixColor = (\n  value: number,\n  color1: AnimatedColor,\n  color2: AnimatedColor,\n  colorSpace: \"RGB\" | \"HSV\" = \"RGB\"\n) => {\n  \"worklet\";\n  return interpolateColor(value, [0, 1], [color1, color2], colorSpace);\n};\n\nexport const hsv2rgb = (h: number, s: number, v: number) => {\n  \"worklet\";\n  const K = {\n    x: 1,\n    y: 2 / 3,\n    z: 1 / 3,\n    w: 3,\n  };\n  const p = {\n    x: Math.abs(fract(h + K.x) * 6 - K.w),\n    y: Math.abs(fract(h + K.y) * 6 - K.w),\n    z: Math.abs(fract(h + K.z) * 6 - K.w),\n  };\n  // return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n  const rgb = {\n    x: v * mix(s, K.x, clamp(p.x - K.x, 0, 1)),\n    y: v * mix(s, K.x, clamp(p.y - K.x, 0, 1)),\n    z: v * mix(s, K.x, clamp(p.z - K.x, 0, 1)),\n  };\n\n  const r = Math.round(rgb.x * 255);\n  const g = Math.round(rgb.y * 255);\n  const b = Math.round(rgb.z * 255);\n\n  return { r, g, b };\n};\n\nexport const opacity = (c: number): number => {\n  \"worklet\";\n  return ((c >> 24) & 255) / 255;\n};\n\nexport const red = (c: number): number => {\n  \"worklet\";\n  return (c >> 16) & 255;\n};\n\nexport const green = (c: number): number => {\n  \"worklet\";\n  return (c >> 8) & 255;\n};\n\nexport const blue = (c: number): number => {\n  \"worklet\";\n  return c & 255;\n};\n"]},"metadata":{},"sourceType":"module"}