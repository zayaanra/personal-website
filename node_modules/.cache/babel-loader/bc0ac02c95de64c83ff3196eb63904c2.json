{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahma\\\\Desktop\\\\Projects\\\\Python\\\\website\\\\personal-website\\\\frontend\\\\app\\\\src\\\\components\\\\svg\\\\Name.js\";\nimport { StyleSheet, View, Image, Text, Animated, Dimensions } from \"react-native\";\nimport React, { useRef } from 'react';\nimport { motion, AnimationProps } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pathColor = \"black\";\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\nconst vb = `0 0 ${windowWidth} ${windowHeight}`;\nconst path = {\n  transition: {\n    duration: 4,\n    //Change this to either slow or hasten the animation\n    ease: \"easeInOut\"\n  },\n  variants: {\n    visible: {\n      pathLength: 1 //Change this to determine how much of the path is drawn when first rendered\n\n    },\n    hidden: {\n      pathLength: 0\n    }\n  }\n};\nconst styles = StyleSheet.create({\n  box: {\n    width: 150,\n    height: 150,\n    backgroundColor: \"white\"\n  }\n}); //letters are 2 boxes wide, 3 boxes tall\n\nfunction Name() {\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.box,\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      animate: {\n        scale: [1, 2, 2, 1, 1],\n        rotate: [0, 0, 270, 270, 0],\n        borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"]\n      },\n      transition: {\n        duration: 2,\n        ease: \"easeInOut\",\n        times: [0, 0.2, 0.5, 0.8, 1],\n        repeat: Infinity,\n        repeatDelay: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Name;\nexport default Name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/src/components/svg/Name.js"],"names":["StyleSheet","View","Image","Text","Animated","Dimensions","React","useRef","motion","AnimationProps","pathColor","windowWidth","get","width","windowHeight","height","vb","path","transition","duration","ease","variants","visible","pathLength","hidden","styles","create","box","backgroundColor","Name","scale","rotate","borderRadius","times","repeat","Infinity","repeatDelay"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkDC,UAAlD,QAAoE,cAApE;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,eAAvC;;AAEA,MAAMC,SAAS,GAAG,OAAlB;AAEA,MAAMC,WAAW,GAAGN,UAAU,CAACO,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AACA,MAAMC,YAAY,GAAGT,UAAU,CAACO,GAAX,CAAe,QAAf,EAAyBG,MAA9C;AAEA,MAAMC,EAAE,GAAI,OAAML,WAAY,IAAGG,YAAa,EAA9C;AAEA,MAAMG,IAAI,GAAG;AACTC,EAAAA,UAAU,EAAE;AACZC,IAAAA,QAAQ,EAAE,CADE;AACC;AACbC,IAAAA,IAAI,EAAE;AAFM,GADH;AAKbC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE;AACLC,MAAAA,UAAU,EAAE,CADP,CACU;;AADV,KADH;AAIVC,IAAAA,MAAM,EAAE;AACJD,MAAAA,UAAU,EAAE;AADR;AAJE;AALG,CAAb;AAeA,MAAME,MAAM,GAAGzB,UAAU,CAAC0B,MAAX,CAAkB;AAC7BC,EAAAA,GAAG,EAAE;AACDd,IAAAA,KAAK,EAAE,GADN;AAEDE,IAAAA,MAAM,EAAE,GAFP;AAGDa,IAAAA,eAAe,EAAE;AAHhB;AADwB,CAAlB,CAAf,C,CAQA;;AACA,SAASC,IAAT,GAAgB;AACZ,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACE,GAApB;AAAA,2BACG,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,OAAO,EAAE;AAACG,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAR;AAAyBC,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,GAAZ,EAAiB,CAAjB,CAAjC;AAAsDC,QAAAA,YAAY,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B;AAApE,OAArB;AACA,MAAA,UAAU,EAAE;AACXb,QAAAA,QAAQ,EAAE,CADC;AAEXC,QAAAA,IAAI,EAAE,WAFK;AAGXa,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,EAAmB,CAAnB,CAHI;AAIXC,QAAAA,MAAM,EAAEC,QAJG;AAKXC,QAAAA,WAAW,EAAE;AALF;AADZ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAbQP,I;AAeT,eAAeA,IAAf","sourcesContent":["import { StyleSheet, View, Image, Text, Animated, Dimensions } from \"react-native\";\r\nimport React, { useRef } from 'react';\r\n\r\nimport { motion, AnimationProps } from \"framer-motion\";\r\n\r\nconst pathColor = \"black\";\r\n\r\nconst windowWidth = Dimensions.get(\"window\").width;\r\nconst windowHeight = Dimensions.get(\"window\").height;\r\n\r\nconst vb = `0 0 ${windowWidth} ${windowHeight}`\r\n\r\nconst path = {\r\n    transition: {\r\n    duration: 4, //Change this to either slow or hasten the animation\r\n    ease: \"easeInOut\",\r\n},\r\nvariants: {\r\n    visible: {\r\n        pathLength: 1, //Change this to determine how much of the path is drawn when first rendered\r\n},\r\nhidden: {\r\n    pathLength: 0,\r\n    },\r\n},\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    box: {\r\n        width: 150,\r\n        height: 150,\r\n        backgroundColor: \"white\",\r\n    }\r\n})\r\n\r\n//letters are 2 boxes wide, 3 boxes tall\r\nfunction Name() {\r\n    return(\r\n        <View style={styles.box}>\r\n           <motion.div animate={{scale: [1, 2, 2, 1, 1], rotate: [0, 0, 270, 270, 0], borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"]}}   \r\n           transition={{\r\n            duration: 2,\r\n            ease: \"easeInOut\",\r\n            times: [0, 0.2, 0.5, 0.8, 1],\r\n            repeat: Infinity,\r\n            repeatDelay: 1\r\n          }}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Name;\r\n\r\n"]},"metadata":{},"sourceType":"module"}