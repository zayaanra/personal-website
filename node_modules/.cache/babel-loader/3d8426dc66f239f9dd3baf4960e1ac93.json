{"ast":null,"code":"import InternalAnimatedValue from './InternalAnimatedValue';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nclass AnimatedMainClock extends InternalAnimatedValue {\n  _frameCallback;\n\n  constructor() {\n    super({\n      type: 'MAIN_CLOCK'\n    });\n  }\n\n  __onEvaluate() {\n    return +new Date();\n  }\n\n  _runFrame = () => {\n    this._updateValue(0);\n\n    if (this.__children.length > 0) {\n      this._frameCallback = requestAnimationFrame(this._runFrame);\n    }\n  };\n\n  __attach() {\n    super.__attach();\n\n    if (!this._frameCallback) {\n      this._frameCallback = requestAnimationFrame(this._runFrame);\n    }\n  }\n\n  __detach() {\n    if (this._frameCallback) {\n      cancelAnimationFrame(this._frameCallback);\n      this._frameCallback = null;\n    }\n\n    super.__detach();\n  }\n\n}\n\nconst mainClock = new AnimatedMainClock();\nexport default class AnimatedClock extends AnimatedNode {\n  _started;\n  _attached;\n\n  constructor() {\n    super({\n      type: 'clock'\n    });\n  }\n\n  toString() {\n    return `AnimatedClock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    return val(mainClock);\n  }\n\n  __attach() {\n    super.__attach();\n\n    if (this._started && !this._attached) {\n      mainClock.__addChild(this);\n    }\n\n    this._attached = true;\n  }\n\n  __detach() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n\n    this._attached = false;\n\n    super.__detach();\n  }\n\n  start() {\n    if (!this._started && this._attached) {\n      mainClock.__addChild(this);\n    }\n\n    this._started = true;\n  }\n\n  stop() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n\n    this._started = false;\n  }\n\n  isStarted() {\n    return this._started;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedClock.js"],"names":["InternalAnimatedValue","AnimatedNode","val","AnimatedMainClock","_frameCallback","constructor","type","__onEvaluate","Date","_runFrame","_updateValue","__children","length","requestAnimationFrame","__attach","__detach","cancelAnimationFrame","mainClock","AnimatedClock","_started","_attached","toString","__nodeID","__addChild","__removeChild","start","stop","isStarted"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,GAAT,QAAoB,QAApB;;AAEA,MAAMC,iBAAN,SAAgCH,qBAAhC,CAAsD;AACpDI,EAAAA,cAAc;;AAEdC,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAN;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAO,CAAC,IAAIC,IAAJ,EAAR;AACD;;AAEDC,EAAAA,SAAS,GAAG,MAAM;AAChB,SAAKC,YAAL,CAAkB,CAAlB;;AACA,QAAI,KAAKC,UAAL,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,WAAKR,cAAL,GAAsBS,qBAAqB,CAAC,KAAKJ,SAAN,CAA3C;AACD;AACF,GALQ;;AAOTK,EAAAA,QAAQ,GAAG;AACT,UAAMA,QAAN;;AACA,QAAI,CAAC,KAAKV,cAAV,EAA0B;AACxB,WAAKA,cAAL,GAAsBS,qBAAqB,CAAC,KAAKJ,SAAN,CAA3C;AACD;AACF;;AAEDM,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKX,cAAT,EAAyB;AACvBY,MAAAA,oBAAoB,CAAC,KAAKZ,cAAN,CAApB;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACD;;AACD,UAAMW,QAAN;AACD;;AA/BmD;;AAkCtD,MAAME,SAAS,GAAG,IAAId,iBAAJ,EAAlB;AAEA,eAAe,MAAMe,aAAN,SAA4BjB,YAA5B,CAAyC;AACtDkB,EAAAA,QAAQ;AACRC,EAAAA,SAAS;;AAETf,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAN;AACD;;AAEDe,EAAAA,QAAQ,GAAG;AACT,WAAQ,sBAAqB,KAAKC,QAAS,EAA3C;AACD;;AAEDf,EAAAA,YAAY,GAAG;AACb,WAAOL,GAAG,CAACe,SAAD,CAAV;AACD;;AAEDH,EAAAA,QAAQ,GAAG;AACT,UAAMA,QAAN;;AACA,QAAI,KAAKK,QAAL,IAAiB,CAAC,KAAKC,SAA3B,EAAsC;AACpCH,MAAAA,SAAS,CAACM,UAAV,CAAqB,IAArB;AACD;;AACD,SAAKH,SAAL,GAAiB,IAAjB;AACD;;AAEDL,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKI,QAAL,IAAiB,KAAKC,SAA1B,EAAqC;AACnCH,MAAAA,SAAS,CAACO,aAAV,CAAwB,IAAxB;AACD;;AACD,SAAKJ,SAAL,GAAiB,KAAjB;;AACA,UAAML,QAAN;AACD;;AAEDU,EAAAA,KAAK,GAAG;AACN,QAAI,CAAC,KAAKN,QAAN,IAAkB,KAAKC,SAA3B,EAAsC;AACpCH,MAAAA,SAAS,CAACM,UAAV,CAAqB,IAArB;AACD;;AACD,SAAKJ,QAAL,GAAgB,IAAhB;AACD;;AAEDO,EAAAA,IAAI,GAAG;AACL,QAAI,KAAKP,QAAL,IAAiB,KAAKC,SAA1B,EAAqC;AACnCH,MAAAA,SAAS,CAACO,aAAV,CAAwB,IAAxB;AACD;;AACD,SAAKL,QAAL,GAAgB,KAAhB;AACD;;AAEDQ,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKR,QAAZ;AACD;;AAhDqD","sourcesContent":["import InternalAnimatedValue from './InternalAnimatedValue';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nclass AnimatedMainClock extends InternalAnimatedValue {\n  _frameCallback;\n\n  constructor() {\n    super({ type: 'MAIN_CLOCK' });\n  }\n\n  __onEvaluate() {\n    return +new Date();\n  }\n\n  _runFrame = () => {\n    this._updateValue(0);\n    if (this.__children.length > 0) {\n      this._frameCallback = requestAnimationFrame(this._runFrame);\n    }\n  };\n\n  __attach() {\n    super.__attach();\n    if (!this._frameCallback) {\n      this._frameCallback = requestAnimationFrame(this._runFrame);\n    }\n  }\n\n  __detach() {\n    if (this._frameCallback) {\n      cancelAnimationFrame(this._frameCallback);\n      this._frameCallback = null;\n    }\n    super.__detach();\n  }\n}\n\nconst mainClock = new AnimatedMainClock();\n\nexport default class AnimatedClock extends AnimatedNode {\n  _started;\n  _attached;\n\n  constructor() {\n    super({ type: 'clock' });\n  }\n\n  toString() {\n    return `AnimatedClock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    return val(mainClock);\n  }\n\n  __attach() {\n    super.__attach();\n    if (this._started && !this._attached) {\n      mainClock.__addChild(this);\n    }\n    this._attached = true;\n  }\n\n  __detach() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n    this._attached = false;\n    super.__detach();\n  }\n\n  start() {\n    if (!this._started && this._attached) {\n      mainClock.__addChild(this);\n    }\n    this._started = true;\n  }\n\n  stop() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n    this._started = false;\n  }\n\n  isStarted() {\n    return this._started;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}