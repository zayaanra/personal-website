{"ast":null,"code":"export var animationParameter = function animationParameter(animationParam) {\n  \"worklet\";\n\n  if (typeof animationParam === \"number\") {\n    throw new Error(\"Expected Animation as parameter\");\n  }\n\n  return typeof animationParam === \"function\" ? animationParam() : animationParam;\n};\nexport var defineAnimation = function defineAnimation(factory) {\n  \"worklet\";\n\n  if (_WORKLET) {\n    return factory();\n  }\n\n  return factory;\n};\nexport var withPause = function withPause(animationParam, paused) {\n  \"worklet\";\n\n  return defineAnimation(function () {\n    \"worklet\";\n\n    var nextAnimation = animationParameter(animationParam);\n\n    var onFrame = function onFrame(state, now) {\n      var lastTimestamp = state.lastTimestamp,\n          elapsed = state.elapsed;\n\n      if (paused.value) {\n        state.elapsed = now - lastTimestamp;\n        return false;\n      }\n\n      var dt = now - elapsed;\n      var finished = nextAnimation.onFrame(nextAnimation, dt);\n      state.current = nextAnimation.current;\n      state.lastTimestamp = dt;\n      return finished;\n    };\n\n    var onStart = function onStart(state, value, now, previousState) {\n      state.lastTimestamp = now;\n      state.elapsed = 0;\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n\n    return {\n      onFrame: onFrame,\n      onStart: onStart,\n      callback: nextAnimation.callback\n    };\n  });\n};\nexport var withBouncing = function withBouncing(animationParam, lowerBound, upperBound) {\n  \"worklet\";\n\n  return defineAnimation(function () {\n    \"worklet\";\n\n    var nextAnimation = animationParameter(animationParam);\n\n    var onFrame = function onFrame(state, now) {\n      var finished = nextAnimation.onFrame(nextAnimation, now);\n      var velocity = nextAnimation.velocity,\n          current = nextAnimation.current;\n      state.current = current;\n\n      if (velocity < 0 && state.current <= lowerBound || velocity > 0 && state.current >= upperBound) {\n        state.current = velocity < 0 ? lowerBound : upperBound;\n        nextAnimation.velocity *= -0.5;\n      }\n\n      return finished;\n    };\n\n    var onStart = function onStart(_state, value, now, previousState) {\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n\n    return {\n      onFrame: onFrame,\n      onStart: onStart,\n      callback: nextAnimation.callback\n    };\n  });\n};","map":{"version":3,"sources":["C:\\Users\\rahma\\Desktop\\Projects\\Python\\website\\personal-website\\frontend\\app\\node_modules\\react-native-redash\\lib\\module\\Animations.ts"],"names":["animationParameter","animationParam","defineAnimation","factory","withPause","nextAnimation","onFrame","lastTimestamp","elapsed","state","paused","now","dt","finished","onStart","callback","withBouncing","velocity","current"],"mappings":"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","sourcesContent":["import type Animated from \"react-native-reanimated\";\n\ndeclare let _WORKLET: boolean;\n\nexport interface AnimationState {\n  current: number;\n}\n\nexport interface PhysicsAnimationState extends AnimationState {\n  velocity: number;\n}\n\nexport type Animation<\n  State extends AnimationState = AnimationState,\n  PrevState = State\n> = {\n  onFrame: (animation: State, now: number) => boolean;\n  onStart: (\n    animation: State,\n    value: number,\n    now: number,\n    lastAnimation: PrevState\n  ) => void;\n  callback?: () => void;\n} & State;\n\nexport type AnimationParameter<State extends AnimationState = AnimationState> =\n  | Animation<State>\n  | (() => Animation<State>)\n  | number;\n\n/**\n *  @summary Access animations passed as parameters safely on both the UI and JS thread with the proper static types.\n *  Animations can receive other animations as parameter.\n */\nexport const animationParameter = <\n  State extends AnimationState = AnimationState\n>(\n  animationParam: AnimationParameter<State>\n) => {\n  \"worklet\";\n  if (typeof animationParam === \"number\") {\n    throw new Error(\"Expected Animation as parameter\");\n  }\n  return typeof animationParam === \"function\"\n    ? animationParam()\n    : animationParam;\n};\n\n/**\n *  @summary Declare custom animations that can be invoked on both the JS and UI thread.\n *  @example\n *  defineAnimation(() => {\n      \"worklet\";\n      // ...animation code\n      return {\n        animation,\n       start\n      }\n    });\n * @worklet\n */\nexport const defineAnimation = <\n  S extends AnimationState = AnimationState,\n  Prev extends AnimationState = AnimationState\n>(\n  factory: () => Omit<Animation<S, Prev>, keyof S>\n) => {\n  \"worklet\";\n  if (_WORKLET) {\n    return (factory() as unknown) as number;\n  }\n  return (factory as unknown) as number;\n};\n\ninterface PausableAnimation extends AnimationState {\n  lastTimestamp: number;\n  elapsed: number;\n}\n\n/**\n *  @summary Make an animation pausable. The state of the animation (paused or not)\n *  is controlled by a boolean shared value.\n *  @example\n    const progress = useSharedValue(0);\n    const paused = useSharedValue(false);\n    useEffect(() => {\n      progress.value = withPause(withLoop(withTiming(1)), paused);\n    }, []);\n  * @worklet\n */\nexport const withPause = (\n  animationParam: AnimationParameter,\n  paused: Animated.SharedValue<boolean>\n) => {\n  \"worklet\";\n  return defineAnimation<PausableAnimation>(() => {\n    \"worklet\";\n    const nextAnimation = animationParameter(animationParam);\n    const onFrame = (state: PausableAnimation, now: number) => {\n      const { lastTimestamp, elapsed } = state;\n      if (paused.value) {\n        state.elapsed = now - lastTimestamp;\n        return false;\n      }\n      const dt = now - elapsed;\n      const finished = nextAnimation.onFrame(nextAnimation, dt);\n      state.current = nextAnimation.current;\n      state.lastTimestamp = dt;\n      return finished;\n    };\n    const onStart = (\n      state: PausableAnimation,\n      value: number,\n      now: number,\n      previousState: AnimationState\n    ) => {\n      state.lastTimestamp = now;\n      state.elapsed = 0;\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n    return {\n      onFrame,\n      onStart,\n      callback: nextAnimation.callback,\n    };\n  });\n};\n\n/**\n *  @summary Add a bouncing behavior to a physics-based animation.\n *  An animation is defined as being physics-based if it contains a velocity in its state.\n *  @example\n    // will bounce if the animations hits the position 0 or 100\n    withBouncing(withDecay({ velocity }), 0, 100)\n * @worklet\n */\nexport const withBouncing = (\n  animationParam: AnimationParameter<PhysicsAnimationState>,\n  lowerBound: number,\n  upperBound: number\n): number => {\n  \"worklet\";\n  return defineAnimation<PhysicsAnimationState, PhysicsAnimationState>(() => {\n    \"worklet\";\n    const nextAnimation = animationParameter(animationParam);\n    const onFrame = (state: PhysicsAnimationState, now: number) => {\n      const finished = nextAnimation.onFrame(nextAnimation, now);\n      const { velocity, current } = nextAnimation;\n      state.current = current;\n      if (\n        (velocity < 0 && state.current <= lowerBound) ||\n        (velocity > 0 && state.current >= upperBound)\n      ) {\n        state.current = velocity < 0 ? lowerBound : upperBound;\n        nextAnimation.velocity *= -0.5;\n      }\n      return finished;\n    };\n    const onStart = (\n      _state: PhysicsAnimationState,\n      value: number,\n      now: number,\n      previousState: PhysicsAnimationState\n    ) => {\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n    return {\n      onFrame,\n      onStart,\n      callback: nextAnimation.callback,\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}