{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TargetNames\", {\n  enumerable: true,\n  get: function () {\n    return _options.TargetNames;\n  }\n});\nexports.default = getTargets;\nObject.defineProperty(exports, \"filterItems\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.default;\n  }\n});\nObject.defineProperty(exports, \"getInclusionReasons\", {\n  enumerable: true,\n  get: function () {\n    return _debug.getInclusionReasons;\n  }\n});\nexports.isBrowsersQueryValid = isBrowsersQueryValid;\nObject.defineProperty(exports, \"isRequired\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.isRequired;\n  }\n});\nObject.defineProperty(exports, \"prettifyTargets\", {\n  enumerable: true,\n  get: function () {\n    return _pretty.prettifyTargets;\n  }\n});\nObject.defineProperty(exports, \"unreleasedLabels\", {\n  enumerable: true,\n  get: function () {\n    return _targets.unreleasedLabels;\n  }\n});\n\nvar _browserslist = require(\"browserslist\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nvar _nativeModules = require(\"@babel/compat-data/native-modules\");\n\nvar _utils = require(\"./utils\");\n\nvar _targets = require(\"./targets\");\n\nvar _options = require(\"./options\");\n\nvar _pretty = require(\"./pretty\");\n\nvar _debug = require(\"./debug\");\n\nvar _filterItems = require(\"./filter-items\");\n\nconst ESM_SUPPORT = _nativeModules[\"es6.module\"];\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\n\nfunction validateTargetNames(targets) {\n  const validTargets = Object.keys(_options.TargetNames);\n\n  for (const target of Object.keys(targets)) {\n    if (!(target in _options.TargetNames)) {\n      throw new Error(v.formatMessage(`'${target}' is not a valid target\n- Did you mean '${(0, _helperValidatorOption.findSuggestion)(target, validTargets)}'?`));\n    }\n  }\n\n  return targets;\n}\n\nfunction isBrowsersQueryValid(browsers) {\n  return typeof browsers === \"string\" || Array.isArray(browsers) && browsers.every(b => typeof b === \"string\");\n}\n\nfunction validateBrowsers(browsers) {\n  v.invariant(browsers === undefined || isBrowsersQueryValid(browsers), `'${String(browsers)}' is not a valid browserslist query`);\n  return browsers;\n}\n\nfunction getLowestVersions(browsers) {\n  return browsers.reduce((all, browser) => {\n    const [browserName, browserVersion] = browser.split(\" \");\n    const normalizedBrowserName = _targets.browserNameMap[browserName];\n\n    if (!normalizedBrowserName) {\n      return all;\n    }\n\n    try {\n      const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n      const isSplitUnreleased = (0, _utils.isUnreleasedVersion)(splitVersion, browserName);\n\n      if (!all[normalizedBrowserName]) {\n        all[normalizedBrowserName] = isSplitUnreleased ? splitVersion : (0, _utils.semverify)(splitVersion);\n        return all;\n      }\n\n      const version = all[normalizedBrowserName];\n      const isUnreleased = (0, _utils.isUnreleasedVersion)(version, browserName);\n\n      if (isUnreleased && isSplitUnreleased) {\n        all[normalizedBrowserName] = (0, _utils.getLowestUnreleased)(version, splitVersion, browserName);\n      } else if (isUnreleased) {\n        all[normalizedBrowserName] = (0, _utils.semverify)(splitVersion);\n      } else if (!isUnreleased && !isSplitUnreleased) {\n        const parsedBrowserVersion = (0, _utils.semverify)(splitVersion);\n        all[normalizedBrowserName] = (0, _utils.semverMin)(version, parsedBrowserVersion);\n      }\n    } catch (e) {}\n\n    return all;\n  }, {});\n}\n\nfunction outputDecimalWarning(decimalTargets) {\n  if (!decimalTargets.length) {\n    return;\n  }\n\n  console.warn(\"Warning, the following targets are using a decimal version:\\n\");\n  decimalTargets.forEach(_ref => {\n    let {\n      target,\n      value\n    } = _ref;\n    return console.warn(`  ${target}: ${value}`);\n  });\n  console.warn(`\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n`);\n}\n\nfunction semverifyTarget(target, value) {\n  try {\n    return (0, _utils.semverify)(value);\n  } catch (error) {\n    throw new Error(v.formatMessage(`'${value}' is not a valid value for 'targets.${target}'.`));\n  }\n}\n\nconst targetParserMap = {\n  __default(target, value) {\n    const version = (0, _utils.isUnreleasedVersion)(value, target) ? value.toLowerCase() : semverifyTarget(target, value);\n    return [target, version];\n  },\n\n  node(target, value) {\n    const parsed = value === true || value === \"current\" ? process.versions.node : semverifyTarget(target, value);\n    return [target, parsed];\n  }\n\n};\n\nfunction generateTargets(inputTargets) {\n  const input = Object.assign({}, inputTargets);\n  delete input.esmodules;\n  delete input.browsers;\n  return input;\n}\n\nfunction resolveTargets(queries, env) {\n  const resolved = _browserslist(queries, {\n    mobileToDesktop: true,\n    env\n  });\n\n  return getLowestVersions(resolved);\n}\n\nfunction getTargets() {\n  let inputTargets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _browsers;\n\n  let {\n    browsers,\n    esmodules\n  } = inputTargets;\n  const {\n    configPath = \".\"\n  } = options;\n  validateBrowsers(browsers);\n  const input = generateTargets(inputTargets);\n  let targets = validateTargetNames(input);\n  const shouldParseBrowsers = !!browsers;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig = !options.ignoreBrowserslistConfig && !hasTargets;\n\n  if (!browsers && shouldSearchForConfig) {\n    browsers = _browserslist.loadConfig({\n      config: options.configFile,\n      path: configPath,\n      env: options.browserslistEnv\n    });\n\n    if (browsers == null) {\n      {\n        browsers = [];\n      }\n    }\n  }\n\n  if (esmodules && (esmodules !== \"intersect\" || !((_browsers = browsers) != null && _browsers.length))) {\n    browsers = Object.keys(ESM_SUPPORT).map(browser => `${browser} >= ${ESM_SUPPORT[browser]}`).join(\", \");\n    esmodules = false;\n  }\n\n  if (browsers) {\n    const queryBrowsers = resolveTargets(browsers, options.browserslistEnv);\n\n    if (esmodules === \"intersect\") {\n      for (const browser of Object.keys(queryBrowsers)) {\n        const version = queryBrowsers[browser];\n\n        if (ESM_SUPPORT[browser]) {\n          queryBrowsers[browser] = (0, _utils.getHighestUnreleased)(version, (0, _utils.semverify)(ESM_SUPPORT[browser]), browser);\n        } else {\n          delete queryBrowsers[browser];\n        }\n      }\n    }\n\n    targets = Object.assign(queryBrowsers, targets);\n  }\n\n  const result = {};\n  const decimalWarnings = [];\n\n  for (const target of Object.keys(targets).sort()) {\n    var _targetParserMap$targ;\n\n    const value = targets[target];\n\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      decimalWarnings.push({\n        target,\n        value\n      });\n    }\n\n    const parser = (_targetParserMap$targ = targetParserMap[target]) != null ? _targetParserMap$targ : targetParserMap.__default;\n    const [parsedTarget, parsedValue] = parser(target, value);\n\n    if (parsedValue) {\n      result[parsedTarget] = parsedValue;\n    }\n  }\n\n  outputDecimalWarning(decimalWarnings);\n  return result;\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/@babel/helper-compilation-targets/lib/index.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_options","TargetNames","default","getTargets","_filterItems","_debug","getInclusionReasons","isBrowsersQueryValid","isRequired","_pretty","prettifyTargets","_targets","unreleasedLabels","_browserslist","require","_helperValidatorOption","_nativeModules","_utils","ESM_SUPPORT","v","OptionValidator","validateTargetNames","targets","validTargets","keys","target","Error","formatMessage","findSuggestion","browsers","Array","isArray","every","b","validateBrowsers","invariant","undefined","String","getLowestVersions","reduce","all","browser","browserName","browserVersion","split","normalizedBrowserName","browserNameMap","splitVersion","toLowerCase","isSplitUnreleased","isUnreleasedVersion","semverify","version","isUnreleased","getLowestUnreleased","parsedBrowserVersion","semverMin","e","outputDecimalWarning","decimalTargets","length","console","warn","forEach","semverifyTarget","error","targetParserMap","__default","node","parsed","process","versions","generateTargets","inputTargets","input","assign","esmodules","resolveTargets","queries","env","resolved","mobileToDesktop","options","_browsers","configPath","shouldParseBrowsers","hasTargets","shouldSearchForConfig","ignoreBrowserslistConfig","loadConfig","config","configFile","path","browserslistEnv","map","join","queryBrowsers","getHighestUnreleased","result","decimalWarnings","sort","_targetParserMap$targ","push","parser","parsedTarget","parsedValue"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TargetNames\", {\n  enumerable: true,\n  get: function () {\n    return _options.TargetNames;\n  }\n});\nexports.default = getTargets;\nObject.defineProperty(exports, \"filterItems\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.default;\n  }\n});\nObject.defineProperty(exports, \"getInclusionReasons\", {\n  enumerable: true,\n  get: function () {\n    return _debug.getInclusionReasons;\n  }\n});\nexports.isBrowsersQueryValid = isBrowsersQueryValid;\nObject.defineProperty(exports, \"isRequired\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.isRequired;\n  }\n});\nObject.defineProperty(exports, \"prettifyTargets\", {\n  enumerable: true,\n  get: function () {\n    return _pretty.prettifyTargets;\n  }\n});\nObject.defineProperty(exports, \"unreleasedLabels\", {\n  enumerable: true,\n  get: function () {\n    return _targets.unreleasedLabels;\n  }\n});\n\nvar _browserslist = require(\"browserslist\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nvar _nativeModules = require(\"@babel/compat-data/native-modules\");\n\nvar _utils = require(\"./utils\");\n\nvar _targets = require(\"./targets\");\n\nvar _options = require(\"./options\");\n\nvar _pretty = require(\"./pretty\");\n\nvar _debug = require(\"./debug\");\n\nvar _filterItems = require(\"./filter-items\");\n\nconst ESM_SUPPORT = _nativeModules[\"es6.module\"];\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\n\nfunction validateTargetNames(targets) {\n  const validTargets = Object.keys(_options.TargetNames);\n\n  for (const target of Object.keys(targets)) {\n    if (!(target in _options.TargetNames)) {\n      throw new Error(v.formatMessage(`'${target}' is not a valid target\n- Did you mean '${(0, _helperValidatorOption.findSuggestion)(target, validTargets)}'?`));\n    }\n  }\n\n  return targets;\n}\n\nfunction isBrowsersQueryValid(browsers) {\n  return typeof browsers === \"string\" || Array.isArray(browsers) && browsers.every(b => typeof b === \"string\");\n}\n\nfunction validateBrowsers(browsers) {\n  v.invariant(browsers === undefined || isBrowsersQueryValid(browsers), `'${String(browsers)}' is not a valid browserslist query`);\n  return browsers;\n}\n\nfunction getLowestVersions(browsers) {\n  return browsers.reduce((all, browser) => {\n    const [browserName, browserVersion] = browser.split(\" \");\n    const normalizedBrowserName = _targets.browserNameMap[browserName];\n\n    if (!normalizedBrowserName) {\n      return all;\n    }\n\n    try {\n      const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n      const isSplitUnreleased = (0, _utils.isUnreleasedVersion)(splitVersion, browserName);\n\n      if (!all[normalizedBrowserName]) {\n        all[normalizedBrowserName] = isSplitUnreleased ? splitVersion : (0, _utils.semverify)(splitVersion);\n        return all;\n      }\n\n      const version = all[normalizedBrowserName];\n      const isUnreleased = (0, _utils.isUnreleasedVersion)(version, browserName);\n\n      if (isUnreleased && isSplitUnreleased) {\n        all[normalizedBrowserName] = (0, _utils.getLowestUnreleased)(version, splitVersion, browserName);\n      } else if (isUnreleased) {\n        all[normalizedBrowserName] = (0, _utils.semverify)(splitVersion);\n      } else if (!isUnreleased && !isSplitUnreleased) {\n        const parsedBrowserVersion = (0, _utils.semverify)(splitVersion);\n        all[normalizedBrowserName] = (0, _utils.semverMin)(version, parsedBrowserVersion);\n      }\n    } catch (e) {}\n\n    return all;\n  }, {});\n}\n\nfunction outputDecimalWarning(decimalTargets) {\n  if (!decimalTargets.length) {\n    return;\n  }\n\n  console.warn(\"Warning, the following targets are using a decimal version:\\n\");\n  decimalTargets.forEach(({\n    target,\n    value\n  }) => console.warn(`  ${target}: ${value}`));\n  console.warn(`\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n`);\n}\n\nfunction semverifyTarget(target, value) {\n  try {\n    return (0, _utils.semverify)(value);\n  } catch (error) {\n    throw new Error(v.formatMessage(`'${value}' is not a valid value for 'targets.${target}'.`));\n  }\n}\n\nconst targetParserMap = {\n  __default(target, value) {\n    const version = (0, _utils.isUnreleasedVersion)(value, target) ? value.toLowerCase() : semverifyTarget(target, value);\n    return [target, version];\n  },\n\n  node(target, value) {\n    const parsed = value === true || value === \"current\" ? process.versions.node : semverifyTarget(target, value);\n    return [target, parsed];\n  }\n\n};\n\nfunction generateTargets(inputTargets) {\n  const input = Object.assign({}, inputTargets);\n  delete input.esmodules;\n  delete input.browsers;\n  return input;\n}\n\nfunction resolveTargets(queries, env) {\n  const resolved = _browserslist(queries, {\n    mobileToDesktop: true,\n    env\n  });\n\n  return getLowestVersions(resolved);\n}\n\nfunction getTargets(inputTargets = {}, options = {}) {\n  var _browsers;\n\n  let {\n    browsers,\n    esmodules\n  } = inputTargets;\n  const {\n    configPath = \".\"\n  } = options;\n  validateBrowsers(browsers);\n  const input = generateTargets(inputTargets);\n  let targets = validateTargetNames(input);\n  const shouldParseBrowsers = !!browsers;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig = !options.ignoreBrowserslistConfig && !hasTargets;\n\n  if (!browsers && shouldSearchForConfig) {\n    browsers = _browserslist.loadConfig({\n      config: options.configFile,\n      path: configPath,\n      env: options.browserslistEnv\n    });\n\n    if (browsers == null) {\n      {\n        browsers = [];\n      }\n    }\n  }\n\n  if (esmodules && (esmodules !== \"intersect\" || !((_browsers = browsers) != null && _browsers.length))) {\n    browsers = Object.keys(ESM_SUPPORT).map(browser => `${browser} >= ${ESM_SUPPORT[browser]}`).join(\", \");\n    esmodules = false;\n  }\n\n  if (browsers) {\n    const queryBrowsers = resolveTargets(browsers, options.browserslistEnv);\n\n    if (esmodules === \"intersect\") {\n      for (const browser of Object.keys(queryBrowsers)) {\n        const version = queryBrowsers[browser];\n\n        if (ESM_SUPPORT[browser]) {\n          queryBrowsers[browser] = (0, _utils.getHighestUnreleased)(version, (0, _utils.semverify)(ESM_SUPPORT[browser]), browser);\n        } else {\n          delete queryBrowsers[browser];\n        }\n      }\n    }\n\n    targets = Object.assign(queryBrowsers, targets);\n  }\n\n  const result = {};\n  const decimalWarnings = [];\n\n  for (const target of Object.keys(targets).sort()) {\n    var _targetParserMap$targ;\n\n    const value = targets[target];\n\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      decimalWarnings.push({\n        target,\n        value\n      });\n    }\n\n    const parser = (_targetParserMap$targ = targetParserMap[target]) != null ? _targetParserMap$targ : targetParserMap.__default;\n    const [parsedTarget, parsedValue] = parser(target, value);\n\n    if (parsedValue) {\n      result[parsedTarget] = parsedValue;\n    }\n  }\n\n  outputDecimalWarning(decimalWarnings);\n  return result;\n}"]},"metadata":{},"sourceType":"script"}