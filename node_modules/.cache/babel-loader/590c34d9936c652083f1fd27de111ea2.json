{"ast":null,"code":"import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class PinwheelIn extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return _values => {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(1, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(1, config))\n            }, {\n              rotate: delayFunction(delay, animation('0', config))\n            }]\n          },\n          initialValues: {\n            opacity: 0,\n            transform: [{\n              scale: 0\n            }, {\n              rotate: '5'\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new PinwheelIn();\n  }\n\n}\nexport class PinwheelOut extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      return _values => {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(0, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(0, config))\n            }, {\n              rotate: delayFunction(delay, animation('5', config))\n            }]\n          },\n          initialValues: {\n            opacity: 1,\n            transform: [{\n              scale: 1\n            }, {\n              rotate: '0'\n            }]\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new PinwheelOut();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultAnimations/Pinwheel.js"],"names":["ComplexAnimationBuilder","PinwheelIn","constructor","arguments","build","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","delay","getDelay","callback","callbackV","_values","animations","opacity","transform","scale","rotate","initialValues","createInstance","PinwheelOut"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,qBAAxC;AACA,OAAO,MAAMC,UAAN,SAAyBD,uBAAzB,CAAiD;AACpDE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;;AACA,SAAKC,KAAL,GAAa,MAAM;AACf,YAAMC,aAAa,GAAG,KAAKC,gBAAL,EAAtB;AACA,YAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsB,KAAKC,qBAAL,EAA5B;AACA,YAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd;AACA,YAAMC,QAAQ,GAAG,KAAKC,SAAtB;AACA,aAAQC,OAAD,IAAa;AAChB;;AACA,eAAO;AACHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,OAAO,EAAEX,aAAa,CAACK,KAAD,EAAQH,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB,CADd;AAERS,YAAAA,SAAS,EAAE,CACP;AACIC,cAAAA,KAAK,EAAEb,aAAa,CAACK,KAAD,EAAQH,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB;AADxB,aADO,EAIP;AACIW,cAAAA,MAAM,EAAEd,aAAa,CAACK,KAAD,EAAQH,SAAS,CAAC,GAAD,EAAMC,MAAN,CAAjB;AADzB,aAJO;AAFH,WADT;AAYHY,UAAAA,aAAa,EAAE;AACXJ,YAAAA,OAAO,EAAE,CADE;AAEXC,YAAAA,SAAS,EAAE,CACP;AACIC,cAAAA,KAAK,EAAE;AADX,aADO,EAIP;AACIC,cAAAA,MAAM,EAAE;AADZ,aAJO;AAFA,WAZZ;AAuBHP,UAAAA,QAAQ,EAAEA;AAvBP,SAAP;AAyBH,OA3BD;AA4BH,KAjCD;AAkCH;;AACoB,SAAdS,cAAc,GAAG;AACpB,WAAO,IAAIpB,UAAJ,EAAP;AACH;;AAxCmD;AA0CxD,OAAO,MAAMqB,WAAN,SAA0BtB,uBAA1B,CAAkD;AACrDE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;;AACA,SAAKC,KAAL,GAAa,MAAM;AACf,YAAMC,aAAa,GAAG,KAAKC,gBAAL,EAAtB;AACA,YAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsB,KAAKC,qBAAL,EAA5B;AACA,YAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd;AACA,YAAMC,QAAQ,GAAG,KAAKC,SAAtB;AACA,aAAQC,OAAD,IAAa;AAChB;;AACA,eAAO;AACHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,OAAO,EAAEX,aAAa,CAACK,KAAD,EAAQH,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB,CADd;AAERS,YAAAA,SAAS,EAAE,CACP;AACIC,cAAAA,KAAK,EAAEb,aAAa,CAACK,KAAD,EAAQH,SAAS,CAAC,CAAD,EAAIC,MAAJ,CAAjB;AADxB,aADO,EAIP;AACIW,cAAAA,MAAM,EAAEd,aAAa,CAACK,KAAD,EAAQH,SAAS,CAAC,GAAD,EAAMC,MAAN,CAAjB;AADzB,aAJO;AAFH,WADT;AAYHY,UAAAA,aAAa,EAAE;AACXJ,YAAAA,OAAO,EAAE,CADE;AAEXC,YAAAA,SAAS,EAAE,CACP;AACIC,cAAAA,KAAK,EAAE;AADX,aADO,EAIP;AACIC,cAAAA,MAAM,EAAE;AADZ,aAJO;AAFA,WAZZ;AAuBHP,UAAAA,QAAQ,EAAEA;AAvBP,SAAP;AAyBH,OA3BD;AA4BH,KAjCD;AAkCH;;AACoB,SAAdS,cAAc,GAAG;AACpB,WAAO,IAAIC,WAAJ,EAAP;AACH;;AAxCoD","sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder';\nexport class PinwheelIn extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(1, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(1, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('0', config)),\n                            },\n                        ],\n                    },\n                    initialValues: {\n                        opacity: 0,\n                        transform: [\n                            {\n                                scale: 0,\n                            },\n                            {\n                                rotate: '5',\n                            },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelIn();\n    }\n}\nexport class PinwheelOut extends ComplexAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            const delayFunction = this.getDelayFunction();\n            const [animation, config] = this.getAnimationAndConfig();\n            const delay = this.getDelay();\n            const callback = this.callbackV;\n            return (_values) => {\n                'worklet';\n                return {\n                    animations: {\n                        opacity: delayFunction(delay, animation(0, config)),\n                        transform: [\n                            {\n                                scale: delayFunction(delay, animation(0, config)),\n                            },\n                            {\n                                rotate: delayFunction(delay, animation('5', config)),\n                            },\n                        ],\n                    },\n                    initialValues: {\n                        opacity: 1,\n                        transform: [\n                            {\n                                scale: 1,\n                            },\n                            {\n                                rotate: '0',\n                            },\n                        ],\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new PinwheelOut();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}