{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFromAstSync = exports.transformFromAstAsync = exports.transformFromAst = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transformation = require(\"./transformation\");\n\nconst transformFromAstRunner = _gensync()(function* (ast, code, opts) {\n  const config = yield* (0, _config.default)(opts);\n  if (config === null) return null;\n  if (!ast) throw new Error(\"No AST given\");\n  return yield* (0, _transformation.run)(config, code, ast);\n});\n\nconst transformFromAst = function transformFromAst(ast, code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) {\n    return transformFromAstRunner.sync(ast, code, opts);\n  }\n\n  transformFromAstRunner.errback(ast, code, opts, callback);\n};\n\nexports.transformFromAst = transformFromAst;\nconst transformFromAstSync = transformFromAstRunner.sync;\nexports.transformFromAstSync = transformFromAstSync;\nconst transformFromAstAsync = transformFromAstRunner.async;\nexports.transformFromAstAsync = transformFromAstAsync;","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/@babel/core/lib/transform-ast.js"],"names":["Object","defineProperty","exports","value","transformFromAstSync","transformFromAstAsync","transformFromAst","_gensync","data","require","_config","_transformation","transformFromAstRunner","ast","code","opts","config","default","Error","run","callback","undefined","sync","errback","async"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,oBAAR,GAA+BF,OAAO,CAACG,qBAAR,GAAgCH,OAAO,CAACI,gBAAR,GAA2B,KAAK,CAA/F;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEAF,EAAAA,QAAQ,GAAG,YAAY;AACrB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIE,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAIE,eAAe,GAAGF,OAAO,CAAC,kBAAD,CAA7B;;AAEA,MAAMG,sBAAsB,GAAGL,QAAQ,GAAG,WAAWM,GAAX,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACpE,QAAMC,MAAM,GAAG,OAAO,CAAC,GAAGN,OAAO,CAACO,OAAZ,EAAqBF,IAArB,CAAtB;AACA,MAAIC,MAAM,KAAK,IAAf,EAAqB,OAAO,IAAP;AACrB,MAAI,CAACH,GAAL,EAAU,MAAM,IAAIK,KAAJ,CAAU,cAAV,CAAN;AACV,SAAO,OAAO,CAAC,GAAGP,eAAe,CAACQ,GAApB,EAAyBH,MAAzB,EAAiCF,IAAjC,EAAuCD,GAAvC,CAAd;AACD,CALsC,CAAvC;;AAOA,MAAMP,gBAAgB,GAAG,SAASA,gBAAT,CAA0BO,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CK,QAA3C,EAAqD;AAC5E,MAAI,OAAOL,IAAP,KAAgB,UAApB,EAAgC;AAC9BK,IAAAA,QAAQ,GAAGL,IAAX;AACAA,IAAAA,IAAI,GAAGM,SAAP;AACD;;AAED,MAAID,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,WAAOT,sBAAsB,CAACU,IAAvB,CAA4BT,GAA5B,EAAiCC,IAAjC,EAAuCC,IAAvC,CAAP;AACD;;AAEDH,EAAAA,sBAAsB,CAACW,OAAvB,CAA+BV,GAA/B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgDK,QAAhD;AACD,CAXD;;AAaAlB,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B;AACA,MAAMF,oBAAoB,GAAGQ,sBAAsB,CAACU,IAApD;AACApB,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B;AACA,MAAMC,qBAAqB,GAAGO,sBAAsB,CAACY,KAArD;AACAtB,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFromAstSync = exports.transformFromAstAsync = exports.transformFromAst = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transformation = require(\"./transformation\");\n\nconst transformFromAstRunner = _gensync()(function* (ast, code, opts) {\n  const config = yield* (0, _config.default)(opts);\n  if (config === null) return null;\n  if (!ast) throw new Error(\"No AST given\");\n  return yield* (0, _transformation.run)(config, code, ast);\n});\n\nconst transformFromAst = function transformFromAst(ast, code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) {\n    return transformFromAstRunner.sync(ast, code, opts);\n  }\n\n  transformFromAstRunner.errback(ast, code, opts, callback);\n};\n\nexports.transformFromAst = transformFromAst;\nconst transformFromAstSync = transformFromAstRunner.sync;\nexports.transformFromAstSync = transformFromAstSync;\nconst transformFromAstAsync = transformFromAstRunner.async;\nexports.transformFromAstAsync = transformFromAstAsync;"]},"metadata":{},"sourceType":"script"}