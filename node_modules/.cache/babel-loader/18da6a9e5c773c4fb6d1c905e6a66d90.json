{"ast":null,"code":"import { withSequence, withTiming } from '../../animation';\nimport { Easing } from '../../Easing';\nimport { BaseAnimationBuilder } from '../animationBuilder';\nexport class JumpingTransition extends BaseAnimationBuilder {\n  constructor() {\n    super(...arguments);\n\n    this.build = () => {\n      var _a;\n\n      const delayFunction = this.getDelayFunction();\n      const callback = this.callbackV;\n      const delay = this.getDelay();\n      const duration = ((_a = this.durationV) !== null && _a !== void 0 ? _a : 300) / 2;\n      const config = {\n        duration: duration * 2\n      };\n      return values => {\n        'worklet';\n\n        const d = Math.max(Math.abs(values.targetOriginX - values.currentOriginX), Math.abs(values.targetOriginY - values.currentOriginY));\n        return {\n          initialValues: {\n            originX: values.currentOriginX,\n            originY: values.currentOriginY,\n            width: values.currentWidth,\n            height: values.currentHeight\n          },\n          animations: {\n            originX: delayFunction(delay, withTiming(values.targetOriginX, config)),\n            originY: delayFunction(delay, withSequence(withTiming(Math.min(values.targetOriginY, values.currentOriginY) - d, {\n              duration,\n              easing: Easing.out(Easing.exp)\n            }), withTiming(values.targetOriginY, Object.assign(Object.assign({}, config), {\n              duration,\n              easing: Easing.bounce\n            })))),\n            width: delayFunction(delay, withTiming(values.targetWidth, config)),\n            height: delayFunction(delay, withTiming(values.targetHeight, config))\n          },\n          callback: callback\n        };\n      };\n    };\n  }\n\n  static createInstance() {\n    return new JumpingTransition();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rahma/Desktop/Projects/Python/website/personal-website/frontend/app/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/defaultTransitions/JumpingTransition.js"],"names":["withSequence","withTiming","Easing","BaseAnimationBuilder","JumpingTransition","constructor","arguments","build","_a","delayFunction","getDelayFunction","callback","callbackV","delay","getDelay","duration","durationV","config","values","d","Math","max","abs","targetOriginX","currentOriginX","targetOriginY","currentOriginY","initialValues","originX","originY","width","currentWidth","height","currentHeight","animations","min","easing","out","exp","Object","assign","bounce","targetWidth","targetHeight","createInstance"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,iBAAzC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAO,MAAMC,iBAAN,SAAgCD,oBAAhC,CAAqD;AACxDE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;;AACA,SAAKC,KAAL,GAAa,MAAM;AACf,UAAIC,EAAJ;;AACA,YAAMC,aAAa,GAAG,KAAKC,gBAAL,EAAtB;AACA,YAAMC,QAAQ,GAAG,KAAKC,SAAtB;AACA,YAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd;AACA,YAAMC,QAAQ,GAAG,CAAC,CAACP,EAAE,GAAG,KAAKQ,SAAX,MAA0B,IAA1B,IAAkCR,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuD,GAAxD,IAA+D,CAAhF;AACA,YAAMS,MAAM,GAAG;AAAEF,QAAAA,QAAQ,EAAEA,QAAQ,GAAG;AAAvB,OAAf;AACA,aAAQG,MAAD,IAAY;AACf;;AACA,cAAMC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,MAAM,CAACK,aAAP,GAAuBL,MAAM,CAACM,cAAvC,CAAT,EAAiEJ,IAAI,CAACE,GAAL,CAASJ,MAAM,CAACO,aAAP,GAAuBP,MAAM,CAACQ,cAAvC,CAAjE,CAAV;AACA,eAAO;AACHC,UAAAA,aAAa,EAAE;AACXC,YAAAA,OAAO,EAAEV,MAAM,CAACM,cADL;AAEXK,YAAAA,OAAO,EAAEX,MAAM,CAACQ,cAFL;AAGXI,YAAAA,KAAK,EAAEZ,MAAM,CAACa,YAHH;AAIXC,YAAAA,MAAM,EAAEd,MAAM,CAACe;AAJJ,WADZ;AAOHC,UAAAA,UAAU,EAAE;AACRN,YAAAA,OAAO,EAAEnB,aAAa,CAACI,KAAD,EAAQZ,UAAU,CAACiB,MAAM,CAACK,aAAR,EAAuBN,MAAvB,CAAlB,CADd;AAERY,YAAAA,OAAO,EAAEpB,aAAa,CAACI,KAAD,EAAQb,YAAY,CAACC,UAAU,CAACmB,IAAI,CAACe,GAAL,CAASjB,MAAM,CAACO,aAAhB,EAA+BP,MAAM,CAACQ,cAAtC,IAAwDP,CAAzD,EAA4D;AAC7GJ,cAAAA,QAD6G;AAE7GqB,cAAAA,MAAM,EAAElC,MAAM,CAACmC,GAAP,CAAWnC,MAAM,CAACoC,GAAlB;AAFqG,aAA5D,CAAX,EAGtCrC,UAAU,CAACiB,MAAM,CAACO,aAAR,EAAuBc,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,MAAlB,CAAd,EAAyC;AAAEF,cAAAA,QAAF;AAAYqB,cAAAA,MAAM,EAAElC,MAAM,CAACuC;AAA3B,aAAzC,CAAvB,CAH4B,CAApB,CAFd;AAMRX,YAAAA,KAAK,EAAErB,aAAa,CAACI,KAAD,EAAQZ,UAAU,CAACiB,MAAM,CAACwB,WAAR,EAAqBzB,MAArB,CAAlB,CANZ;AAORe,YAAAA,MAAM,EAAEvB,aAAa,CAACI,KAAD,EAAQZ,UAAU,CAACiB,MAAM,CAACyB,YAAR,EAAsB1B,MAAtB,CAAlB;AAPb,WAPT;AAgBHN,UAAAA,QAAQ,EAAEA;AAhBP,SAAP;AAkBH,OArBD;AAsBH,KA7BD;AA8BH;;AACoB,SAAdiC,cAAc,GAAG;AACpB,WAAO,IAAIxC,iBAAJ,EAAP;AACH;;AApCuD","sourcesContent":["import { withSequence, withTiming } from '../../animation';\nimport { Easing } from '../../Easing';\nimport { BaseAnimationBuilder } from '../animationBuilder';\nexport class JumpingTransition extends BaseAnimationBuilder {\n    constructor() {\n        super(...arguments);\n        this.build = () => {\n            var _a;\n            const delayFunction = this.getDelayFunction();\n            const callback = this.callbackV;\n            const delay = this.getDelay();\n            const duration = ((_a = this.durationV) !== null && _a !== void 0 ? _a : 300) / 2;\n            const config = { duration: duration * 2 };\n            return (values) => {\n                'worklet';\n                const d = Math.max(Math.abs(values.targetOriginX - values.currentOriginX), Math.abs(values.targetOriginY - values.currentOriginY));\n                return {\n                    initialValues: {\n                        originX: values.currentOriginX,\n                        originY: values.currentOriginY,\n                        width: values.currentWidth,\n                        height: values.currentHeight,\n                    },\n                    animations: {\n                        originX: delayFunction(delay, withTiming(values.targetOriginX, config)),\n                        originY: delayFunction(delay, withSequence(withTiming(Math.min(values.targetOriginY, values.currentOriginY) - d, {\n                            duration,\n                            easing: Easing.out(Easing.exp),\n                        }), withTiming(values.targetOriginY, Object.assign(Object.assign({}, config), { duration, easing: Easing.bounce })))),\n                        width: delayFunction(delay, withTiming(values.targetWidth, config)),\n                        height: delayFunction(delay, withTiming(values.targetHeight, config)),\n                    },\n                    callback: callback,\n                };\n            };\n        };\n    }\n    static createInstance() {\n        return new JumpingTransition();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}